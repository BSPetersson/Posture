ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"state_machine.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/state_machine.c"
  18              		.section	.text.state_machine_initialize,"ax",%progbits
  19              		.align	1
  20              		.global	state_machine_initialize
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	state_machine_initialize:
  26              	.LFB40:
   1:Core/Src/state_machine.c **** #include "state_machine.h"
   2:Core/Src/state_machine.c **** 
   3:Core/Src/state_machine.c **** device_state_t current_state;
   4:Core/Src/state_machine.c **** 
   5:Core/Src/state_machine.c **** void state_machine_initialize() {
  27              		.loc 1 5 33 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
   6:Core/Src/state_machine.c ****     current_state = TEST_STATE;
  32              		.loc 1 6 5 view .LVU1
  33              		.loc 1 6 19 is_stmt 0 view .LVU2
  34 0000 014B     		ldr	r3, .L2
  35 0002 0622     		movs	r2, #6
  36 0004 1A70     		strb	r2, [r3]
   7:Core/Src/state_machine.c **** }
  37              		.loc 1 7 1 view .LVU3
  38              		@ sp needed
  39 0006 7047     		bx	lr
  40              	.L3:
  41              		.align	2
  42              	.L2:
  43 0008 00000000 		.word	current_state
  44              		.cfi_endproc
  45              	.LFE40:
  47              		.section	.text.handle_test_state,"ax",%progbits
  48              		.align	1
  49              		.global	handle_test_state
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s 			page 2


  54              	handle_test_state:
  55              	.LFB42:
   8:Core/Src/state_machine.c **** 
   9:Core/Src/state_machine.c **** void state_machine_update() {
  10:Core/Src/state_machine.c ****     switch (current_state) {
  11:Core/Src/state_machine.c ****         case DEVICE_STATE_SLEEP_MODE:
  12:Core/Src/state_machine.c ****             // handle_sleep_mode(sm);
  13:Core/Src/state_machine.c ****             break;
  14:Core/Src/state_machine.c ****         case DEVICE_STATE_ACTIVE_MODE:
  15:Core/Src/state_machine.c ****             // handle_active_mode(sm);
  16:Core/Src/state_machine.c ****             break;
  17:Core/Src/state_machine.c ****         case DEVICE_STATE_CALIBRATION_MODE:
  18:Core/Src/state_machine.c ****             // handle_calibration_mode(sm);
  19:Core/Src/state_machine.c ****             break;
  20:Core/Src/state_machine.c ****         case DEVICE_STATE_ACTIVITY_MODE:
  21:Core/Src/state_machine.c ****             // handle_activity_mode(sm);
  22:Core/Src/state_machine.c ****             break;
  23:Core/Src/state_machine.c ****         case DEVICE_STATE_BAD_POSTURE_STATE:
  24:Core/Src/state_machine.c ****             // handle_bad_posture_state(sm);
  25:Core/Src/state_machine.c ****             break;
  26:Core/Src/state_machine.c ****         case DEVICE_STATE_GOOD_POSTURE_STATE:
  27:Core/Src/state_machine.c ****             // handle_good_posture_state(sm);
  28:Core/Src/state_machine.c ****             break;
  29:Core/Src/state_machine.c ****         case TEST_STATE:
  30:Core/Src/state_machine.c ****             handle_test_state();
  31:Core/Src/state_machine.c ****             break;
  32:Core/Src/state_machine.c ****     }
  33:Core/Src/state_machine.c **** }
  34:Core/Src/state_machine.c **** 
  35:Core/Src/state_machine.c **** 
  36:Core/Src/state_machine.c **** void handle_test_state() {
  56              		.loc 1 36 26 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 10B5     		push	{r4, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
  37:Core/Src/state_machine.c ****     // Enable the haptic feedback controller
  38:Core/Src/state_machine.c ****     haptic_feedback_enable();
  65              		.loc 1 38 5 view .LVU5
  66 0002 FFF7FEFF 		bl	haptic_feedback_enable
  67              	.LVL0:
  39:Core/Src/state_machine.c **** 
  40:Core/Src/state_machine.c ****     led_execute_sequence(LED_SEQ_THREE_BLINKS);
  68              		.loc 1 40 5 view .LVU6
  69 0006 0120     		movs	r0, #1
  70 0008 FFF7FEFF 		bl	led_execute_sequence
  71              	.LVL1:
  41:Core/Src/state_machine.c **** 
  42:Core/Src/state_machine.c ****     // Wait a moment to ensure the controller is ready
  43:Core/Src/state_machine.c ****     HAL_Delay(1000);
  72              		.loc 1 43 5 view .LVU7
  73 000c FA20     		movs	r0, #250
  74 000e 8000     		lsls	r0, r0, #2
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s 			page 3


  75 0010 FFF7FEFF 		bl	HAL_Delay
  76              	.LVL2:
  44:Core/Src/state_machine.c **** 
  45:Core/Src/state_machine.c ****     led_execute_sequence(LED_SEQ_DOUBLE_BLINK);
  77              		.loc 1 45 5 view .LVU8
  78 0014 0220     		movs	r0, #2
  79 0016 FFF7FEFF 		bl	led_execute_sequence
  80              	.LVL3:
  46:Core/Src/state_machine.c **** 
  47:Core/Src/state_machine.c ****     haptic_feedback_set_actuator_type(LRA);
  81              		.loc 1 47 5 view .LVU9
  82 001a 0120     		movs	r0, #1
  83 001c FFF7FEFF 		bl	haptic_feedback_set_actuator_type
  84              	.LVL4:
  48:Core/Src/state_machine.c **** 
  49:Core/Src/state_machine.c ****     // Test setting the mode to internal trigger mode
  50:Core/Src/state_machine.c ****     int8_t HAL_STATUS = haptic_feedback_set_mode(DRV2605L_MODE_INTERNAL_TRIGGER);
  85              		.loc 1 50 5 view .LVU10
  86              		.loc 1 50 25 is_stmt 0 view .LVU11
  87 0020 0020     		movs	r0, #0
  88 0022 FFF7FEFF 		bl	haptic_feedback_set_mode
  89              	.LVL5:
  51:Core/Src/state_machine.c **** 
  52:Core/Src/state_machine.c ****     // Play a basic waveform from the library
  53:Core/Src/state_machine.c ****     if (haptic_feedback_play_waveform(1) == HAL_OK) { // Play waveform index 1
  90              		.loc 1 53 5 is_stmt 1 view .LVU12
  91              		.loc 1 53 9 is_stmt 0 view .LVU13
  92 0026 0120     		movs	r0, #1
  93 0028 FFF7FEFF 		bl	haptic_feedback_play_waveform
  94              	.LVL6:
  95              		.loc 1 53 8 discriminator 1 view .LVU14
  96 002c 0028     		cmp	r0, #0
  97 002e 04D0     		beq	.L10
  98              	.L5:
  54:Core/Src/state_machine.c ****         haptic_feedback_start();
  55:Core/Src/state_machine.c ****         HAL_Delay(1000); // Allow the waveform to play for 1 second
  56:Core/Src/state_machine.c ****         haptic_feedback_stop();
  57:Core/Src/state_machine.c ****     }
  58:Core/Src/state_machine.c **** 
  59:Core/Src/state_machine.c ****     led_execute_sequence(LED_SEQ_FADE_IN_OUT);
  99              		.loc 1 59 5 is_stmt 1 view .LVU15
 100 0030 0320     		movs	r0, #3
 101 0032 FFF7FEFF 		bl	led_execute_sequence
 102              	.LVL7:
  60:Core/Src/state_machine.c **** 
  61:Core/Src/state_machine.c ****     for (int i = 0; i <= 123; i++) {
 103              		.loc 1 61 5 view .LVU16
 104              	.LBB2:
 105              		.loc 1 61 10 view .LVU17
 106              		.loc 1 61 14 is_stmt 0 view .LVU18
 107 0036 0024     		movs	r4, #0
 108              		.loc 1 61 5 view .LVU19
 109 0038 0FE0     		b	.L6
 110              	.LVL8:
 111              	.L10:
 112              		.loc 1 61 5 view .LVU20
 113              	.LBE2:
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s 			page 4


  54:Core/Src/state_machine.c ****         haptic_feedback_start();
 114              		.loc 1 54 9 is_stmt 1 view .LVU21
 115 003a FFF7FEFF 		bl	haptic_feedback_start
 116              	.LVL9:
  55:Core/Src/state_machine.c ****         haptic_feedback_stop();
 117              		.loc 1 55 9 view .LVU22
 118 003e FA20     		movs	r0, #250
 119 0040 8000     		lsls	r0, r0, #2
 120 0042 FFF7FEFF 		bl	HAL_Delay
 121              	.LVL10:
  56:Core/Src/state_machine.c ****     }
 122              		.loc 1 56 9 view .LVU23
 123 0046 FFF7FEFF 		bl	haptic_feedback_stop
 124              	.LVL11:
 125 004a F1E7     		b	.L5
 126              	.LVL12:
 127              	.L7:
 128              	.LBB3:
  62:Core/Src/state_machine.c ****         // led_on(i);
  63:Core/Src/state_machine.c ****         // Play a different waveform
  64:Core/Src/state_machine.c ****         if (haptic_feedback_play_waveform(i) == HAL_OK) { // Play waveform index 2
  65:Core/Src/state_machine.c ****             haptic_feedback_start();
  66:Core/Src/state_machine.c ****             HAL_Delay(1000); // Play for 1 second
  67:Core/Src/state_machine.c ****             haptic_feedback_stop();
  68:Core/Src/state_machine.c ****         }
  69:Core/Src/state_machine.c **** 
  70:Core/Src/state_machine.c ****         led_off();
 129              		.loc 1 70 9 view .LVU24
 130 004c FFF7FEFF 		bl	led_off
 131              	.LVL13:
  71:Core/Src/state_machine.c ****         HAL_Delay(1000); // Wait between waveforms
 132              		.loc 1 71 9 view .LVU25
 133 0050 FA20     		movs	r0, #250
 134 0052 8000     		lsls	r0, r0, #2
 135 0054 FFF7FEFF 		bl	HAL_Delay
 136              	.LVL14:
  61:Core/Src/state_machine.c ****         // led_on(i);
 137              		.loc 1 61 32 discriminator 2 view .LVU26
 138 0058 0134     		adds	r4, r4, #1
 139              	.LVL15:
 140              	.L6:
  61:Core/Src/state_machine.c ****         // led_on(i);
 141              		.loc 1 61 23 discriminator 1 view .LVU27
 142 005a 7B2C     		cmp	r4, #123
 143 005c 0DDC     		bgt	.L11
  64:Core/Src/state_machine.c ****             haptic_feedback_start();
 144              		.loc 1 64 9 view .LVU28
  64:Core/Src/state_machine.c ****             haptic_feedback_start();
 145              		.loc 1 64 13 is_stmt 0 view .LVU29
 146 005e E0B2     		uxtb	r0, r4
 147 0060 FFF7FEFF 		bl	haptic_feedback_play_waveform
 148              	.LVL16:
  64:Core/Src/state_machine.c ****             haptic_feedback_start();
 149              		.loc 1 64 12 discriminator 1 view .LVU30
 150 0064 0028     		cmp	r0, #0
 151 0066 F1D1     		bne	.L7
  65:Core/Src/state_machine.c ****             HAL_Delay(1000); // Play for 1 second
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s 			page 5


 152              		.loc 1 65 13 is_stmt 1 view .LVU31
 153 0068 FFF7FEFF 		bl	haptic_feedback_start
 154              	.LVL17:
  66:Core/Src/state_machine.c ****             haptic_feedback_stop();
 155              		.loc 1 66 13 view .LVU32
 156 006c FA20     		movs	r0, #250
 157 006e 8000     		lsls	r0, r0, #2
 158 0070 FFF7FEFF 		bl	HAL_Delay
 159              	.LVL18:
  67:Core/Src/state_machine.c ****         }
 160              		.loc 1 67 13 view .LVU33
 161 0074 FFF7FEFF 		bl	haptic_feedback_stop
 162              	.LVL19:
 163 0078 E8E7     		b	.L7
 164              	.L11:
 165              	.LBE3:
  72:Core/Src/state_machine.c ****     }
  73:Core/Src/state_machine.c **** 
  74:Core/Src/state_machine.c ****     // Test real-time playback (RTP) mode with amplitude control
  75:Core/Src/state_machine.c ****     if (haptic_feedback_rtp_mode(128) == HAL_OK) { // Set amplitude to mid-range
 166              		.loc 1 75 5 view .LVU34
 167              		.loc 1 75 9 is_stmt 0 view .LVU35
 168 007a 8020     		movs	r0, #128
 169 007c FFF7FEFF 		bl	haptic_feedback_rtp_mode
 170              	.LVL20:
 171              		.loc 1 75 8 discriminator 1 view .LVU36
 172 0080 0028     		cmp	r0, #0
 173 0082 06D0     		beq	.L12
 174              	.L9:
  76:Core/Src/state_machine.c ****         HAL_Delay(1000); // Play RTP mode for 1 second
  77:Core/Src/state_machine.c ****         haptic_feedback_stop();
  78:Core/Src/state_machine.c ****     }
  79:Core/Src/state_machine.c **** 
  80:Core/Src/state_machine.c ****     // Disable the haptic feedback controller after tests are completed
  81:Core/Src/state_machine.c ****     haptic_feedback_disable();
 175              		.loc 1 81 5 is_stmt 1 view .LVU37
 176 0084 FFF7FEFF 		bl	haptic_feedback_disable
 177              	.LVL21:
  82:Core/Src/state_machine.c **** 
  83:Core/Src/state_machine.c ****     // Add a small delay before transitioning out of the test state
  84:Core/Src/state_machine.c ****     HAL_Delay(500);
 178              		.loc 1 84 5 view .LVU38
 179 0088 FA20     		movs	r0, #250
 180 008a 4000     		lsls	r0, r0, #1
 181 008c FFF7FEFF 		bl	HAL_Delay
 182              	.LVL22:
  85:Core/Src/state_machine.c **** }
 183              		.loc 1 85 1 is_stmt 0 view .LVU39
 184              		@ sp needed
 185              	.LVL23:
 186              		.loc 1 85 1 view .LVU40
 187 0090 10BD     		pop	{r4, pc}
 188              	.LVL24:
 189              	.L12:
  76:Core/Src/state_machine.c ****         HAL_Delay(1000); // Play RTP mode for 1 second
 190              		.loc 1 76 9 is_stmt 1 view .LVU41
 191 0092 FA30     		adds	r0, r0, #250
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s 			page 6


 192 0094 8000     		lsls	r0, r0, #2
 193 0096 FFF7FEFF 		bl	HAL_Delay
 194              	.LVL25:
  77:Core/Src/state_machine.c ****     }
 195              		.loc 1 77 9 view .LVU42
 196 009a FFF7FEFF 		bl	haptic_feedback_stop
 197              	.LVL26:
 198 009e F1E7     		b	.L9
 199              		.cfi_endproc
 200              	.LFE42:
 202              		.section	.text.state_machine_update,"ax",%progbits
 203              		.align	1
 204              		.global	state_machine_update
 205              		.syntax unified
 206              		.code	16
 207              		.thumb_func
 209              	state_machine_update:
 210              	.LFB41:
   9:Core/Src/state_machine.c ****     switch (current_state) {
 211              		.loc 1 9 29 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215 0000 10B5     		push	{r4, lr}
 216              	.LCFI1:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 4, -8
 219              		.cfi_offset 14, -4
  10:Core/Src/state_machine.c ****         case DEVICE_STATE_SLEEP_MODE:
 220              		.loc 1 10 5 view .LVU44
 221 0002 044B     		ldr	r3, .L16
 222 0004 1B78     		ldrb	r3, [r3]
 223 0006 062B     		cmp	r3, #6
 224 0008 00D0     		beq	.L15
 225              	.L13:
  33:Core/Src/state_machine.c **** 
 226              		.loc 1 33 1 is_stmt 0 view .LVU45
 227              		@ sp needed
 228 000a 10BD     		pop	{r4, pc}
 229              	.L15:
  30:Core/Src/state_machine.c ****             break;
 230              		.loc 1 30 13 is_stmt 1 view .LVU46
 231 000c FFF7FEFF 		bl	handle_test_state
 232              	.LVL27:
  31:Core/Src/state_machine.c ****     }
 233              		.loc 1 31 13 view .LVU47
  33:Core/Src/state_machine.c **** 
 234              		.loc 1 33 1 is_stmt 0 view .LVU48
 235 0010 FBE7     		b	.L13
 236              	.L17:
 237 0012 C046     		.align	2
 238              	.L16:
 239 0014 00000000 		.word	current_state
 240              		.cfi_endproc
 241              	.LFE41:
 243              		.global	current_state
 244              		.section	.bss.current_state,"aw",%nobits
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s 			page 7


 247              	current_state:
 248 0000 00       		.space	1
 249              		.text
 250              	.Letext0:
 251              		.file 2 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 252              		.file 3 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 253              		.file 4 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 254              		.file 5 "Core/Inc/haptic_feedback_controller.h"
 255              		.file 6 "Core/Inc/led_controller.h"
 256              		.file 7 "Core/Inc/state_machine.h"
 257              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 state_machine.c
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s:19     .text.state_machine_initialize:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s:25     .text.state_machine_initialize:00000000 state_machine_initialize
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s:43     .text.state_machine_initialize:00000008 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s:247    .bss.current_state:00000000 current_state
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s:48     .text.handle_test_state:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s:54     .text.handle_test_state:00000000 handle_test_state
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s:203    .text.state_machine_update:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s:209    .text.state_machine_update:00000000 state_machine_update
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s:239    .text.state_machine_update:00000014 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//cc0oZJ9f.s:248    .bss.current_state:00000000 $d

UNDEFINED SYMBOLS
haptic_feedback_enable
led_execute_sequence
HAL_Delay
haptic_feedback_set_actuator_type
haptic_feedback_set_mode
haptic_feedback_play_waveform
haptic_feedback_start
haptic_feedback_stop
led_off
haptic_feedback_rtp_mode
haptic_feedback_disable
