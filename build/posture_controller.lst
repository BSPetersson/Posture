ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"posture_controller.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/posture_controller.c"
  18              		.section	.text.dot_product,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	dot_product:
  25              	.LVL0:
  26              	.LFB41:
   1:Core/Src/posture_controller.c **** #include "posture_controller.h"
   2:Core/Src/posture_controller.c **** #include "haptic_feedback_controller.h"
   3:Core/Src/posture_controller.c **** #include "button_controller.h"
   4:Core/Src/posture_controller.c **** #include "led_controller.h"
   5:Core/Src/posture_controller.c **** #include "main.h"
   6:Core/Src/posture_controller.c **** #include <math.h>
   7:Core/Src/posture_controller.c **** 
   8:Core/Src/posture_controller.c **** // Constants
   9:Core/Src/posture_controller.c **** #define DEFAULT_THRESHOLD_ANGLE_RAD (20.0f * (M_PI / 180.0f))  // 15 degrees (in radians)
  10:Core/Src/posture_controller.c **** #define EMA_ALPHA                   0.5f    // Weight for exponential moving average update
  11:Core/Src/posture_controller.c **** 
  12:Core/Src/posture_controller.c **** // Internal state variables
  13:Core/Src/posture_controller.c **** static float measured_vector[3];
  14:Core/Src/posture_controller.c **** static float reference_vector[3];
  15:Core/Src/posture_controller.c **** static float threshold_angle = DEFAULT_THRESHOLD_ANGLE_RAD;
  16:Core/Src/posture_controller.c **** static float current_angle = 0.0f;
  17:Core/Src/posture_controller.c **** static bool is_posture_correct = true;
  18:Core/Src/posture_controller.c **** uint32_t last_bad_posture_time = 0;
  19:Core/Src/posture_controller.c **** uint32_t last_good_posture_time = 0;
  20:Core/Src/posture_controller.c **** 
  21:Core/Src/posture_controller.c **** static void normalize_vector(float v[3]) {
  22:Core/Src/posture_controller.c ****     float mag = sqrtf(v[0]*v[0] + v[1]*v[1] + v[2]*v[2]);
  23:Core/Src/posture_controller.c ****     if (mag > 0.0f) {
  24:Core/Src/posture_controller.c ****         v[0] /= mag;
  25:Core/Src/posture_controller.c ****         v[1] /= mag;
  26:Core/Src/posture_controller.c ****         v[2] /= mag;
  27:Core/Src/posture_controller.c ****     }
  28:Core/Src/posture_controller.c **** }
  29:Core/Src/posture_controller.c **** 
  30:Core/Src/posture_controller.c **** static float dot_product(const float a[3], const float b[3]) {
  27              		.loc 1 30 62 view -0
  28              		.cfi_startproc
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 2


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 30 62 is_stmt 0 view .LVU1
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0500     		movs	r5, r0
  40 0004 0C00     		movs	r4, r1
  31:Core/Src/posture_controller.c ****     return a[0]*b[0] + a[1]*b[1] + a[2]*b[2];
  41              		.loc 1 31 5 is_stmt 1 view .LVU2
  42              		.loc 1 31 13 is_stmt 0 view .LVU3
  43 0006 0068     		ldr	r0, [r0]
  44              	.LVL1:
  45              		.loc 1 31 18 view .LVU4
  46 0008 0968     		ldr	r1, [r1]
  47              	.LVL2:
  48              		.loc 1 31 16 view .LVU5
  49 000a FFF7FEFF 		bl	__aeabi_fmul
  50              	.LVL3:
  51 000e 061C     		adds	r6, r0, #0
  52              		.loc 1 31 25 view .LVU6
  53 0010 6868     		ldr	r0, [r5, #4]
  54              		.loc 1 31 30 view .LVU7
  55 0012 6168     		ldr	r1, [r4, #4]
  56              		.loc 1 31 28 view .LVU8
  57 0014 FFF7FEFF 		bl	__aeabi_fmul
  58              	.LVL4:
  59 0018 011C     		adds	r1, r0, #0
  60              		.loc 1 31 22 view .LVU9
  61 001a 301C     		adds	r0, r6, #0
  62 001c FFF7FEFF 		bl	__aeabi_fadd
  63              	.LVL5:
  64 0020 061C     		adds	r6, r0, #0
  65              		.loc 1 31 37 view .LVU10
  66 0022 A868     		ldr	r0, [r5, #8]
  67              		.loc 1 31 42 view .LVU11
  68 0024 A168     		ldr	r1, [r4, #8]
  69              		.loc 1 31 40 view .LVU12
  70 0026 FFF7FEFF 		bl	__aeabi_fmul
  71              	.LVL6:
  72 002a 011C     		adds	r1, r0, #0
  73              		.loc 1 31 34 view .LVU13
  74 002c 301C     		adds	r0, r6, #0
  75 002e FFF7FEFF 		bl	__aeabi_fadd
  76              	.LVL7:
  32:Core/Src/posture_controller.c **** }
  77              		.loc 1 32 1 view .LVU14
  78              		@ sp needed
  79              	.LVL8:
  80              	.LVL9:
  81              		.loc 1 32 1 view .LVU15
  82 0032 70BD     		pop	{r4, r5, r6, pc}
  83              		.cfi_endproc
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 3


  84              	.LFE41:
  86              		.section	.text.normalize_vector,"ax",%progbits
  87              		.align	1
  88              		.syntax unified
  89              		.code	16
  90              		.thumb_func
  92              	normalize_vector:
  93              	.LVL10:
  94              	.LFB40:
  21:Core/Src/posture_controller.c ****     float mag = sqrtf(v[0]*v[0] + v[1]*v[1] + v[2]*v[2]);
  95              		.loc 1 21 42 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  21:Core/Src/posture_controller.c ****     float mag = sqrtf(v[0]*v[0] + v[1]*v[1] + v[2]*v[2]);
  99              		.loc 1 21 42 is_stmt 0 view .LVU17
 100 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 101              	.LCFI1:
 102              		.cfi_def_cfa_offset 20
 103              		.cfi_offset 4, -20
 104              		.cfi_offset 5, -16
 105              		.cfi_offset 6, -12
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 C646     		mov	lr, r8
 109 0004 00B5     		push	{lr}
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 24
 112              		.cfi_offset 8, -24
 113 0006 0400     		movs	r4, r0
  22:Core/Src/posture_controller.c ****     if (mag > 0.0f) {
 114              		.loc 1 22 5 is_stmt 1 view .LVU18
  22:Core/Src/posture_controller.c ****     if (mag > 0.0f) {
 115              		.loc 1 22 24 is_stmt 0 view .LVU19
 116 0008 0368     		ldr	r3, [r0]
 117 000a 9846     		mov	r8, r3
  22:Core/Src/posture_controller.c ****     if (mag > 0.0f) {
 118              		.loc 1 22 27 view .LVU20
 119 000c 191C     		adds	r1, r3, #0
 120 000e 181C     		adds	r0, r3, #0
 121              	.LVL11:
  22:Core/Src/posture_controller.c ****     if (mag > 0.0f) {
 122              		.loc 1 22 27 view .LVU21
 123 0010 FFF7FEFF 		bl	__aeabi_fmul
 124              	.LVL12:
 125 0014 051C     		adds	r5, r0, #0
  22:Core/Src/posture_controller.c ****     if (mag > 0.0f) {
 126              		.loc 1 22 36 view .LVU22
 127 0016 6768     		ldr	r7, [r4, #4]
  22:Core/Src/posture_controller.c ****     if (mag > 0.0f) {
 128              		.loc 1 22 39 view .LVU23
 129 0018 391C     		adds	r1, r7, #0
 130 001a 381C     		adds	r0, r7, #0
 131 001c FFF7FEFF 		bl	__aeabi_fmul
 132              	.LVL13:
 133 0020 011C     		adds	r1, r0, #0
  22:Core/Src/posture_controller.c ****     if (mag > 0.0f) {
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 4


 134              		.loc 1 22 33 view .LVU24
 135 0022 281C     		adds	r0, r5, #0
 136 0024 FFF7FEFF 		bl	__aeabi_fadd
 137              	.LVL14:
 138 0028 051C     		adds	r5, r0, #0
  22:Core/Src/posture_controller.c ****     if (mag > 0.0f) {
 139              		.loc 1 22 48 view .LVU25
 140 002a A668     		ldr	r6, [r4, #8]
  22:Core/Src/posture_controller.c ****     if (mag > 0.0f) {
 141              		.loc 1 22 51 view .LVU26
 142 002c 311C     		adds	r1, r6, #0
 143 002e 301C     		adds	r0, r6, #0
 144 0030 FFF7FEFF 		bl	__aeabi_fmul
 145              	.LVL15:
 146 0034 011C     		adds	r1, r0, #0
  22:Core/Src/posture_controller.c ****     if (mag > 0.0f) {
 147              		.loc 1 22 17 view .LVU27
 148 0036 281C     		adds	r0, r5, #0
 149 0038 FFF7FEFF 		bl	__aeabi_fadd
 150              	.LVL16:
 151 003c FFF7FEFF 		bl	sqrtf
 152              	.LVL17:
 153 0040 051C     		adds	r5, r0, #0
 154              	.LVL18:
  23:Core/Src/posture_controller.c ****         v[0] /= mag;
 155              		.loc 1 23 5 is_stmt 1 view .LVU28
  23:Core/Src/posture_controller.c ****         v[0] /= mag;
 156              		.loc 1 23 8 is_stmt 0 view .LVU29
 157 0042 0021     		movs	r1, #0
 158 0044 FFF7FEFF 		bl	__aeabi_fcmpgt
 159              	.LVL19:
  23:Core/Src/posture_controller.c ****         v[0] /= mag;
 160              		.loc 1 23 8 view .LVU30
 161 0048 0028     		cmp	r0, #0
 162 004a 0ED0     		beq	.L2
  24:Core/Src/posture_controller.c ****         v[1] /= mag;
 163              		.loc 1 24 9 is_stmt 1 view .LVU31
  24:Core/Src/posture_controller.c ****         v[1] /= mag;
 164              		.loc 1 24 14 is_stmt 0 view .LVU32
 165 004c 291C     		adds	r1, r5, #0
 166 004e 4046     		mov	r0, r8
 167 0050 FFF7FEFF 		bl	__aeabi_fdiv
 168              	.LVL20:
 169 0054 2060     		str	r0, [r4]
  25:Core/Src/posture_controller.c ****         v[2] /= mag;
 170              		.loc 1 25 9 is_stmt 1 view .LVU33
  25:Core/Src/posture_controller.c ****         v[2] /= mag;
 171              		.loc 1 25 14 is_stmt 0 view .LVU34
 172 0056 291C     		adds	r1, r5, #0
 173 0058 381C     		adds	r0, r7, #0
 174 005a FFF7FEFF 		bl	__aeabi_fdiv
 175              	.LVL21:
 176 005e 6060     		str	r0, [r4, #4]
  26:Core/Src/posture_controller.c ****     }
 177              		.loc 1 26 9 is_stmt 1 view .LVU35
  26:Core/Src/posture_controller.c ****     }
 178              		.loc 1 26 14 is_stmt 0 view .LVU36
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 5


 179 0060 291C     		adds	r1, r5, #0
 180 0062 301C     		adds	r0, r6, #0
 181 0064 FFF7FEFF 		bl	__aeabi_fdiv
 182              	.LVL22:
 183 0068 A060     		str	r0, [r4, #8]
 184              	.L2:
  28:Core/Src/posture_controller.c **** 
 185              		.loc 1 28 1 view .LVU37
 186              		@ sp needed
 187              	.LVL23:
 188              	.LVL24:
  28:Core/Src/posture_controller.c **** 
 189              		.loc 1 28 1 view .LVU38
 190 006a 80BC     		pop	{r7}
 191 006c B846     		mov	r8, r7
 192 006e F0BD     		pop	{r4, r5, r6, r7, pc}
 193              		.cfi_endproc
 194              	.LFE40:
 196              		.section	.text.update_reference_vector,"ax",%progbits
 197              		.align	1
 198              		.syntax unified
 199              		.code	16
 200              		.thumb_func
 202              	update_reference_vector:
 203              	.LFB42:
  33:Core/Src/posture_controller.c **** 
  34:Core/Src/posture_controller.c **** static void update_reference_vector(void) {
 204              		.loc 1 34 43 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 209              	.LCFI3:
 210              		.cfi_def_cfa_offset 24
 211              		.cfi_offset 3, -24
 212              		.cfi_offset 4, -20
 213              		.cfi_offset 5, -16
 214              		.cfi_offset 6, -12
 215              		.cfi_offset 7, -8
 216              		.cfi_offset 14, -4
  35:Core/Src/posture_controller.c ****     for (int i = 0; i < 3; i++) {
 217              		.loc 1 35 5 view .LVU40
 218              	.LBB2:
 219              		.loc 1 35 10 view .LVU41
 220              	.LVL25:
 221              		.loc 1 35 14 is_stmt 0 view .LVU42
 222 0002 0024     		movs	r4, #0
 223              		.loc 1 35 5 view .LVU43
 224 0004 13E0     		b	.L7
 225              	.LVL26:
 226              	.L8:
  36:Core/Src/posture_controller.c ****         reference_vector[i] = (1.0f - EMA_ALPHA) * reference_vector[i] + EMA_ALPHA * measured_vecto
 227              		.loc 1 36 9 is_stmt 1 view .LVU44
 228              		.loc 1 36 68 is_stmt 0 view .LVU45
 229 0006 0D4F     		ldr	r7, .L9
 230 0008 A500     		lsls	r5, r4, #2
 231 000a E859     		ldr	r0, [r5, r7]
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 6


 232              		.loc 1 36 50 view .LVU46
 233 000c FC21     		movs	r1, #252
 234 000e 8905     		lsls	r1, r1, #22
 235 0010 FFF7FEFF 		bl	__aeabi_fmul
 236              	.LVL27:
 237 0014 061C     		adds	r6, r0, #0
 238              		.loc 1 36 101 view .LVU47
 239 0016 0A4B     		ldr	r3, .L9+4
 240 0018 E858     		ldr	r0, [r5, r3]
 241              		.loc 1 36 84 view .LVU48
 242 001a FC21     		movs	r1, #252
 243 001c 8905     		lsls	r1, r1, #22
 244 001e FFF7FEFF 		bl	__aeabi_fmul
 245              	.LVL28:
 246 0022 011C     		adds	r1, r0, #0
 247              		.loc 1 36 72 view .LVU49
 248 0024 301C     		adds	r0, r6, #0
 249 0026 FFF7FEFF 		bl	__aeabi_fadd
 250              	.LVL29:
 251              		.loc 1 36 29 view .LVU50
 252 002a 7851     		str	r0, [r7, r5]
  35:Core/Src/posture_controller.c ****     for (int i = 0; i < 3; i++) {
 253              		.loc 1 35 29 is_stmt 1 discriminator 3 view .LVU51
 254 002c 0134     		adds	r4, r4, #1
 255              	.LVL30:
 256              	.L7:
  35:Core/Src/posture_controller.c ****     for (int i = 0; i < 3; i++) {
 257              		.loc 1 35 23 discriminator 1 view .LVU52
 258 002e 022C     		cmp	r4, #2
 259 0030 E9DD     		ble	.L8
 260              	.LBE2:
  37:Core/Src/posture_controller.c ****     }
  38:Core/Src/posture_controller.c ****     normalize_vector(reference_vector);
 261              		.loc 1 38 5 view .LVU53
 262 0032 0248     		ldr	r0, .L9
 263 0034 FFF7FEFF 		bl	normalize_vector
 264              	.LVL31:
  39:Core/Src/posture_controller.c **** }
 265              		.loc 1 39 1 is_stmt 0 view .LVU54
 266              		@ sp needed
 267              	.LVL32:
 268              		.loc 1 39 1 view .LVU55
 269 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 270              	.L10:
 271 003a C046     		.align	2
 272              	.L9:
 273 003c 00000000 		.word	reference_vector
 274 0040 00000000 		.word	measured_vector
 275              		.cfi_endproc
 276              	.LFE42:
 278              		.section	.text.get_angle,"ax",%progbits
 279              		.align	1
 280              		.syntax unified
 281              		.code	16
 282              		.thumb_func
 284              	get_angle:
 285              	.LFB43:
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 7


  40:Core/Src/posture_controller.c **** 
  41:Core/Src/posture_controller.c **** static float get_angle(void) {
 286              		.loc 1 41 30 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 16
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 30B5     		push	{r4, r5, lr}
 291              	.LCFI4:
 292              		.cfi_def_cfa_offset 12
 293              		.cfi_offset 4, -12
 294              		.cfi_offset 5, -8
 295              		.cfi_offset 14, -4
 296 0002 85B0     		sub	sp, sp, #20
 297              	.LCFI5:
 298              		.cfi_def_cfa_offset 32
  42:Core/Src/posture_controller.c ****     accel_data_t data = accelerometer_controller_get_latest_data();
 299              		.loc 1 42 5 view .LVU57
 300              		.loc 1 42 25 is_stmt 0 view .LVU58
 301 0004 01AD     		add	r5, sp, #4
 302 0006 2800     		movs	r0, r5
 303 0008 FFF7FEFF 		bl	accelerometer_controller_get_latest_data
 304              	.LVL33:
  43:Core/Src/posture_controller.c ****     
  44:Core/Src/posture_controller.c ****     measured_vector[0] = data.x_mps2;
 305              		.loc 1 44 5 is_stmt 1 view .LVU59
 306              		.loc 1 44 30 is_stmt 0 view .LVU60
 307 000c 019B     		ldr	r3, [sp, #4]
 308              		.loc 1 44 24 view .LVU61
 309 000e 114C     		ldr	r4, .L16
 310 0010 2360     		str	r3, [r4]
  45:Core/Src/posture_controller.c ****     measured_vector[1] = data.y_mps2;
 311              		.loc 1 45 5 is_stmt 1 view .LVU62
 312              		.loc 1 45 30 is_stmt 0 view .LVU63
 313 0012 029B     		ldr	r3, [sp, #8]
 314              		.loc 1 45 24 view .LVU64
 315 0014 6360     		str	r3, [r4, #4]
  46:Core/Src/posture_controller.c ****     measured_vector[2] = data.z_mps2;
 316              		.loc 1 46 5 is_stmt 1 view .LVU65
 317              		.loc 1 46 30 is_stmt 0 view .LVU66
 318 0016 039B     		ldr	r3, [sp, #12]
 319              		.loc 1 46 24 view .LVU67
 320 0018 A360     		str	r3, [r4, #8]
  47:Core/Src/posture_controller.c ****     normalize_vector(measured_vector);
 321              		.loc 1 47 5 is_stmt 1 view .LVU68
 322 001a 2000     		movs	r0, r4
 323 001c FFF7FEFF 		bl	normalize_vector
 324              	.LVL34:
  48:Core/Src/posture_controller.c ****     
  49:Core/Src/posture_controller.c ****     float dot = dot_product(reference_vector, measured_vector);
 325              		.loc 1 49 5 view .LVU69
 326              		.loc 1 49 17 is_stmt 0 view .LVU70
 327 0020 0D48     		ldr	r0, .L16+4
 328 0022 2100     		movs	r1, r4
 329 0024 FFF7FEFF 		bl	dot_product
 330              	.LVL35:
 331 0028 041C     		adds	r4, r0, #0
 332              	.LVL36:
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 8


  50:Core/Src/posture_controller.c ****     if (dot > 1.0f)  dot = 1.0f;
 333              		.loc 1 50 5 is_stmt 1 view .LVU71
 334              		.loc 1 50 8 is_stmt 0 view .LVU72
 335 002a FE21     		movs	r1, #254
 336 002c 8905     		lsls	r1, r1, #22
 337 002e FFF7FEFF 		bl	__aeabi_fcmpgt
 338              	.LVL37:
 339              		.loc 1 50 8 view .LVU73
 340 0032 0028     		cmp	r0, #0
 341 0034 06D0     		beq	.L15
 342              		.loc 1 50 26 discriminator 1 view .LVU74
 343 0036 FE24     		movs	r4, #254
 344              	.LVL38:
 345              		.loc 1 50 26 discriminator 1 view .LVU75
 346 0038 A405     		lsls	r4, r4, #22
 347              	.L12:
 348              	.LVL39:
  51:Core/Src/posture_controller.c ****     if (dot < -1.0f) dot = -1.0f;
  52:Core/Src/posture_controller.c ****     return acosf(dot);
 349              		.loc 1 52 5 is_stmt 1 view .LVU76
 350              		.loc 1 52 12 is_stmt 0 view .LVU77
 351 003a 201C     		adds	r0, r4, #0
 352 003c FFF7FEFF 		bl	acosf
 353              	.LVL40:
  53:Core/Src/posture_controller.c **** }
 354              		.loc 1 53 1 view .LVU78
 355 0040 05B0     		add	sp, sp, #20
 356              		@ sp needed
 357              	.LVL41:
 358              		.loc 1 53 1 view .LVU79
 359 0042 30BD     		pop	{r4, r5, pc}
 360              	.LVL42:
 361              	.L15:
  51:Core/Src/posture_controller.c ****     if (dot < -1.0f) dot = -1.0f;
 362              		.loc 1 51 5 is_stmt 1 view .LVU80
  51:Core/Src/posture_controller.c ****     if (dot < -1.0f) dot = -1.0f;
 363              		.loc 1 51 8 is_stmt 0 view .LVU81
 364 0044 0549     		ldr	r1, .L16+8
 365 0046 201C     		adds	r0, r4, #0
 366 0048 FFF7FEFF 		bl	__aeabi_fcmplt
 367              	.LVL43:
 368 004c 0028     		cmp	r0, #0
 369 004e F4D0     		beq	.L12
  51:Core/Src/posture_controller.c ****     if (dot < -1.0f) dot = -1.0f;
 370              		.loc 1 51 26 discriminator 1 view .LVU82
 371 0050 024C     		ldr	r4, .L16+8
 372              	.LVL44:
  51:Core/Src/posture_controller.c ****     if (dot < -1.0f) dot = -1.0f;
 373              		.loc 1 51 26 discriminator 1 view .LVU83
 374 0052 F2E7     		b	.L12
 375              	.L17:
 376              		.align	2
 377              	.L16:
 378 0054 00000000 		.word	measured_vector
 379 0058 00000000 		.word	reference_vector
 380 005c 000080BF 		.word	-1082130432
 381              		.cfi_endproc
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 9


 382              	.LFE43:
 384              		.section	.text.posture_controller_initialize,"ax",%progbits
 385              		.align	1
 386              		.global	posture_controller_initialize
 387              		.syntax unified
 388              		.code	16
 389              		.thumb_func
 391              	posture_controller_initialize:
 392              	.LFB44:
  54:Core/Src/posture_controller.c **** 
  55:Core/Src/posture_controller.c **** void posture_controller_initialize(void) {
 393              		.loc 1 55 42 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 16
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397 0000 10B5     		push	{r4, lr}
 398              	.LCFI6:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 4, -8
 401              		.cfi_offset 14, -4
 402 0002 84B0     		sub	sp, sp, #16
 403              	.LCFI7:
 404              		.cfi_def_cfa_offset 24
  56:Core/Src/posture_controller.c ****     threshold_angle = DEFAULT_THRESHOLD_ANGLE_RAD;
 405              		.loc 1 56 5 view .LVU85
 406              		.loc 1 56 21 is_stmt 0 view .LVU86
 407 0004 084B     		ldr	r3, .L19
 408 0006 094A     		ldr	r2, .L19+4
 409 0008 1A60     		str	r2, [r3]
  57:Core/Src/posture_controller.c ****     
  58:Core/Src/posture_controller.c ****     accel_data_t data = accelerometer_controller_get_latest_data();
 410              		.loc 1 58 5 is_stmt 1 view .LVU87
 411              		.loc 1 58 25 is_stmt 0 view .LVU88
 412 000a 01AC     		add	r4, sp, #4
 413 000c 2000     		movs	r0, r4
 414 000e FFF7FEFF 		bl	accelerometer_controller_get_latest_data
 415              	.LVL45:
  59:Core/Src/posture_controller.c ****     reference_vector[0] = data.x_mps2;
 416              		.loc 1 59 5 is_stmt 1 view .LVU89
 417              		.loc 1 59 31 is_stmt 0 view .LVU90
 418 0012 019B     		ldr	r3, [sp, #4]
 419              		.loc 1 59 25 view .LVU91
 420 0014 0648     		ldr	r0, .L19+8
 421 0016 0360     		str	r3, [r0]
  60:Core/Src/posture_controller.c ****     reference_vector[1] = data.y_mps2;
 422              		.loc 1 60 5 is_stmt 1 view .LVU92
 423              		.loc 1 60 31 is_stmt 0 view .LVU93
 424 0018 029B     		ldr	r3, [sp, #8]
 425              		.loc 1 60 25 view .LVU94
 426 001a 4360     		str	r3, [r0, #4]
  61:Core/Src/posture_controller.c ****     reference_vector[2] = data.z_mps2;
 427              		.loc 1 61 5 is_stmt 1 view .LVU95
 428              		.loc 1 61 31 is_stmt 0 view .LVU96
 429 001c 039B     		ldr	r3, [sp, #12]
 430              		.loc 1 61 25 view .LVU97
 431 001e 8360     		str	r3, [r0, #8]
  62:Core/Src/posture_controller.c ****     normalize_vector(reference_vector);
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 10


 432              		.loc 1 62 5 is_stmt 1 view .LVU98
 433 0020 FFF7FEFF 		bl	normalize_vector
 434              	.LVL46:
  63:Core/Src/posture_controller.c **** }
 435              		.loc 1 63 1 is_stmt 0 view .LVU99
 436 0024 04B0     		add	sp, sp, #16
 437              		@ sp needed
 438 0026 10BD     		pop	{r4, pc}
 439              	.L20:
 440              		.align	2
 441              	.L19:
 442 0028 00000000 		.word	threshold_angle
 443 002c C2B8B23E 		.word	1051900098
 444 0030 00000000 		.word	reference_vector
 445              		.cfi_endproc
 446              	.LFE44:
 448              		.section	.text.posture_controller_update,"ax",%progbits
 449              		.align	1
 450              		.global	posture_controller_update
 451              		.syntax unified
 452              		.code	16
 453              		.thumb_func
 455              	posture_controller_update:
 456              	.LFB45:
  64:Core/Src/posture_controller.c **** 
  65:Core/Src/posture_controller.c **** void posture_controller_update(void) {
 457              		.loc 1 65 38 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461 0000 10B5     		push	{r4, lr}
 462              	.LCFI8:
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 4, -8
 465              		.cfi_offset 14, -4
  66:Core/Src/posture_controller.c ****     uint32_t now = HAL_GetTick();
 466              		.loc 1 66 5 view .LVU101
 467              		.loc 1 66 20 is_stmt 0 view .LVU102
 468 0002 FFF7FEFF 		bl	HAL_GetTick
 469              	.LVL47:
 470 0006 0400     		movs	r4, r0
 471              	.LVL48:
  67:Core/Src/posture_controller.c ****     current_angle = get_angle();
 472              		.loc 1 67 5 is_stmt 1 view .LVU103
 473              		.loc 1 67 21 is_stmt 0 view .LVU104
 474 0008 FFF7FEFF 		bl	get_angle
 475              	.LVL49:
 476              		.loc 1 67 19 discriminator 1 view .LVU105
 477 000c 1A4B     		ldr	r3, .L30
 478 000e 1860     		str	r0, [r3]
  68:Core/Src/posture_controller.c **** 
  69:Core/Src/posture_controller.c ****     if (current_angle > threshold_angle) {
 479              		.loc 1 69 5 is_stmt 1 view .LVU106
 480              		.loc 1 69 23 is_stmt 0 view .LVU107
 481 0010 1A4B     		ldr	r3, .L30+4
 482 0012 1968     		ldr	r1, [r3]
 483              		.loc 1 69 8 view .LVU108
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 11


 484 0014 FFF7FEFF 		bl	__aeabi_fcmpgt
 485              	.LVL50:
 486 0018 0028     		cmp	r0, #0
 487 001a 23D0     		beq	.L28
  70:Core/Src/posture_controller.c ****         last_bad_posture_time = now;
 488              		.loc 1 70 9 is_stmt 1 view .LVU109
 489              		.loc 1 70 31 is_stmt 0 view .LVU110
 490 001c 184B     		ldr	r3, .L30+8
 491 001e 1C60     		str	r4, [r3]
 492              	.L24:
  71:Core/Src/posture_controller.c ****     } else {
  72:Core/Src/posture_controller.c ****         last_good_posture_time = now;
  73:Core/Src/posture_controller.c ****     }
  74:Core/Src/posture_controller.c **** 
  75:Core/Src/posture_controller.c ****     if (last_good_posture_time > last_bad_posture_time && (last_good_posture_time - last_bad_postur
 493              		.loc 1 75 5 is_stmt 1 view .LVU111
 494              		.loc 1 75 32 is_stmt 0 view .LVU112
 495 0020 184B     		ldr	r3, .L30+12
 496 0022 1B68     		ldr	r3, [r3]
 497 0024 164A     		ldr	r2, .L30+8
 498 0026 1268     		ldr	r2, [r2]
 499              		.loc 1 75 8 view .LVU113
 500 0028 9342     		cmp	r3, r2
 501 002a 08D9     		bls	.L25
 502              		.loc 1 75 83 discriminator 1 view .LVU114
 503 002c 9B1A     		subs	r3, r3, r2
 504              		.loc 1 75 56 discriminator 1 view .LVU115
 505 002e FA22     		movs	r2, #250
 506 0030 9200     		lsls	r2, r2, #2
 507 0032 9342     		cmp	r3, r2
 508 0034 03D9     		bls	.L25
 509              		.loc 1 75 118 discriminator 2 view .LVU116
 510 0036 144B     		ldr	r3, .L30+16
 511 0038 1B78     		ldrb	r3, [r3]
 512              		.loc 1 75 115 discriminator 2 view .LVU117
 513 003a 002B     		cmp	r3, #0
 514 003c 15D0     		beq	.L29
 515              	.L25:
  76:Core/Src/posture_controller.c ****         is_posture_correct = true;
  77:Core/Src/posture_controller.c ****         update_reference_vector();
  78:Core/Src/posture_controller.c ****     }
  79:Core/Src/posture_controller.c **** 
  80:Core/Src/posture_controller.c ****     if (last_bad_posture_time > last_good_posture_time && (last_bad_posture_time - last_good_postur
 516              		.loc 1 80 5 is_stmt 1 view .LVU118
 517              		.loc 1 80 31 is_stmt 0 view .LVU119
 518 003e 104B     		ldr	r3, .L30+8
 519 0040 1B68     		ldr	r3, [r3]
 520 0042 104A     		ldr	r2, .L30+12
 521 0044 1268     		ldr	r2, [r2]
 522              		.loc 1 80 8 view .LVU120
 523 0046 9342     		cmp	r3, r2
 524 0048 0BD9     		bls	.L21
 525              		.loc 1 80 82 discriminator 1 view .LVU121
 526 004a 9B1A     		subs	r3, r3, r2
 527              		.loc 1 80 56 discriminator 1 view .LVU122
 528 004c FA22     		movs	r2, #250
 529 004e 9200     		lsls	r2, r2, #2
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 12


 530 0050 9342     		cmp	r3, r2
 531 0052 06D9     		bls	.L21
 532              		.loc 1 80 115 discriminator 2 view .LVU123
 533 0054 0C4B     		ldr	r3, .L30+16
 534 0056 1B78     		ldrb	r3, [r3]
 535 0058 002B     		cmp	r3, #0
 536 005a 02D0     		beq	.L21
  81:Core/Src/posture_controller.c ****         is_posture_correct = false;
 537              		.loc 1 81 9 is_stmt 1 view .LVU124
 538              		.loc 1 81 28 is_stmt 0 view .LVU125
 539 005c 0A4B     		ldr	r3, .L30+16
 540 005e 0022     		movs	r2, #0
 541 0060 1A70     		strb	r2, [r3]
 542              	.L21:
  82:Core/Src/posture_controller.c ****     }
  83:Core/Src/posture_controller.c **** }
 543              		.loc 1 83 1 view .LVU126
 544              		@ sp needed
 545              	.LVL51:
 546              		.loc 1 83 1 view .LVU127
 547 0062 10BD     		pop	{r4, pc}
 548              	.LVL52:
 549              	.L28:
  72:Core/Src/posture_controller.c ****     }
 550              		.loc 1 72 9 is_stmt 1 view .LVU128
  72:Core/Src/posture_controller.c ****     }
 551              		.loc 1 72 32 is_stmt 0 view .LVU129
 552 0064 074B     		ldr	r3, .L30+12
 553 0066 1C60     		str	r4, [r3]
 554 0068 DAE7     		b	.L24
 555              	.L29:
  76:Core/Src/posture_controller.c ****         update_reference_vector();
 556              		.loc 1 76 9 is_stmt 1 view .LVU130
  76:Core/Src/posture_controller.c ****         update_reference_vector();
 557              		.loc 1 76 28 is_stmt 0 view .LVU131
 558 006a 074B     		ldr	r3, .L30+16
 559 006c 0122     		movs	r2, #1
 560 006e 1A70     		strb	r2, [r3]
  77:Core/Src/posture_controller.c ****     }
 561              		.loc 1 77 9 is_stmt 1 view .LVU132
 562 0070 FFF7FEFF 		bl	update_reference_vector
 563              	.LVL53:
 564 0074 E3E7     		b	.L25
 565              	.L31:
 566 0076 C046     		.align	2
 567              	.L30:
 568 0078 00000000 		.word	current_angle
 569 007c 00000000 		.word	threshold_angle
 570 0080 00000000 		.word	last_bad_posture_time
 571 0084 00000000 		.word	last_good_posture_time
 572 0088 00000000 		.word	is_posture_correct
 573              		.cfi_endproc
 574              	.LFE45:
 576              		.section	.text.posture_controller_is_posture_correct,"ax",%progbits
 577              		.align	1
 578              		.global	posture_controller_is_posture_correct
 579              		.syntax unified
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 13


 580              		.code	16
 581              		.thumb_func
 583              	posture_controller_is_posture_correct:
 584              	.LFB46:
  84:Core/Src/posture_controller.c **** 
  85:Core/Src/posture_controller.c **** bool posture_controller_is_posture_correct(void) {
 585              		.loc 1 85 50 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589 0000 10B5     		push	{r4, lr}
 590              	.LCFI9:
 591              		.cfi_def_cfa_offset 8
 592              		.cfi_offset 4, -8
 593              		.cfi_offset 14, -4
  86:Core/Src/posture_controller.c ****     haptic_feedback_disable();
 594              		.loc 1 86 5 view .LVU134
 595 0002 FFF7FEFF 		bl	haptic_feedback_disable
 596              	.LVL54:
  87:Core/Src/posture_controller.c ****     led_off();
 597              		.loc 1 87 5 view .LVU135
 598 0006 FFF7FEFF 		bl	led_off
 599              	.LVL55:
  88:Core/Src/posture_controller.c ****     return is_posture_correct;
 600              		.loc 1 88 5 view .LVU136
 601              		.loc 1 88 12 is_stmt 0 view .LVU137
 602 000a 014B     		ldr	r3, .L33
 603              		.loc 1 88 12 discriminator 1 view .LVU138
 604 000c 1878     		ldrb	r0, [r3]
  89:Core/Src/posture_controller.c **** }
 605              		.loc 1 89 1 view .LVU139
 606              		@ sp needed
 607 000e 10BD     		pop	{r4, pc}
 608              	.L34:
 609              		.align	2
 610              	.L33:
 611 0010 00000000 		.word	is_posture_correct
 612              		.cfi_endproc
 613              	.LFE46:
 615              		.section	.text.posture_controller_handle_bad_posture,"ax",%progbits
 616              		.align	1
 617              		.global	posture_controller_handle_bad_posture
 618              		.syntax unified
 619              		.code	16
 620              		.thumb_func
 622              	posture_controller_handle_bad_posture:
 623              	.LFB47:
  90:Core/Src/posture_controller.c **** 
  91:Core/Src/posture_controller.c **** bool posture_controller_handle_bad_posture(void) {
 624              		.loc 1 91 50 is_stmt 1 view -0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628 0000 10B5     		push	{r4, lr}
 629              	.LCFI10:
 630              		.cfi_def_cfa_offset 8
 631              		.cfi_offset 4, -8
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 14


 632              		.cfi_offset 14, -4
  92:Core/Src/posture_controller.c ****     // Trigger hapic feedback constantly
  93:Core/Src/posture_controller.c ****     haptic_feedback_play_waveform(0x01);
 633              		.loc 1 93 5 view .LVU141
 634 0002 0120     		movs	r0, #1
 635 0004 FFF7FEFF 		bl	haptic_feedback_play_waveform
 636              	.LVL56:
  94:Core/Src/posture_controller.c ****     haptic_feedback_start();
 637              		.loc 1 94 5 view .LVU142
 638 0008 FFF7FEFF 		bl	haptic_feedback_start
 639              	.LVL57:
  95:Core/Src/posture_controller.c ****     led_on(100);
 640              		.loc 1 95 5 view .LVU143
 641 000c 6420     		movs	r0, #100
 642 000e FFF7FEFF 		bl	led_on
 643              	.LVL58:
  96:Core/Src/posture_controller.c ****     return is_posture_correct;
 644              		.loc 1 96 5 view .LVU144
 645              		.loc 1 96 12 is_stmt 0 view .LVU145
 646 0012 014B     		ldr	r3, .L36
 647              		.loc 1 96 12 discriminator 1 view .LVU146
 648 0014 1878     		ldrb	r0, [r3]
  97:Core/Src/posture_controller.c **** }
 649              		.loc 1 97 1 view .LVU147
 650              		@ sp needed
 651 0016 10BD     		pop	{r4, pc}
 652              	.L37:
 653              		.align	2
 654              	.L36:
 655 0018 00000000 		.word	is_posture_correct
 656              		.cfi_endproc
 657              	.LFE47:
 659              		.section	.text.posture_controller_calibrate,"ax",%progbits
 660              		.align	1
 661              		.global	posture_controller_calibrate
 662              		.syntax unified
 663              		.code	16
 664              		.thumb_func
 666              	posture_controller_calibrate:
 667              	.LFB48:
  98:Core/Src/posture_controller.c **** 
  99:Core/Src/posture_controller.c **** void posture_controller_calibrate(void) {
 668              		.loc 1 99 41 is_stmt 1 view -0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 16
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672 0000 10B5     		push	{r4, lr}
 673              	.LCFI11:
 674              		.cfi_def_cfa_offset 8
 675              		.cfi_offset 4, -8
 676              		.cfi_offset 14, -4
 677 0002 84B0     		sub	sp, sp, #16
 678              	.LCFI12:
 679              		.cfi_def_cfa_offset 24
 100:Core/Src/posture_controller.c ****     accel_data_t data = accelerometer_controller_get_latest_data();
 680              		.loc 1 100 5 view .LVU149
 681              		.loc 1 100 25 is_stmt 0 view .LVU150
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 15


 682 0004 01AC     		add	r4, sp, #4
 683 0006 2000     		movs	r0, r4
 684 0008 FFF7FEFF 		bl	accelerometer_controller_get_latest_data
 685              	.LVL59:
 101:Core/Src/posture_controller.c ****     reference_vector[0] = data.x_mps2;
 686              		.loc 1 101 5 is_stmt 1 view .LVU151
 687              		.loc 1 101 31 is_stmt 0 view .LVU152
 688 000c 019B     		ldr	r3, [sp, #4]
 689              		.loc 1 101 25 view .LVU153
 690 000e 0548     		ldr	r0, .L39
 691 0010 0360     		str	r3, [r0]
 102:Core/Src/posture_controller.c ****     reference_vector[1] = data.y_mps2;
 692              		.loc 1 102 5 is_stmt 1 view .LVU154
 693              		.loc 1 102 31 is_stmt 0 view .LVU155
 694 0012 029B     		ldr	r3, [sp, #8]
 695              		.loc 1 102 25 view .LVU156
 696 0014 4360     		str	r3, [r0, #4]
 103:Core/Src/posture_controller.c ****     reference_vector[2] = data.z_mps2;
 697              		.loc 1 103 5 is_stmt 1 view .LVU157
 698              		.loc 1 103 31 is_stmt 0 view .LVU158
 699 0016 039B     		ldr	r3, [sp, #12]
 700              		.loc 1 103 25 view .LVU159
 701 0018 8360     		str	r3, [r0, #8]
 104:Core/Src/posture_controller.c ****     normalize_vector(reference_vector);
 702              		.loc 1 104 5 is_stmt 1 view .LVU160
 703 001a FFF7FEFF 		bl	normalize_vector
 704              	.LVL60:
 105:Core/Src/posture_controller.c **** }...
 705              		.loc 1 105 1 is_stmt 0 view .LVU161
 706 001e 04B0     		add	sp, sp, #16
 707              		@ sp needed
 708 0020 10BD     		pop	{r4, pc}
 709              	.L40:
 710 0022 C046     		.align	2
 711              	.L39:
 712 0024 00000000 		.word	reference_vector
 713              		.cfi_endproc
 714              	.LFE48:
 716              		.global	last_good_posture_time
 717              		.section	.bss.last_good_posture_time,"aw",%nobits
 718              		.align	2
 721              	last_good_posture_time:
 722 0000 00000000 		.space	4
 723              		.global	last_bad_posture_time
 724              		.section	.bss.last_bad_posture_time,"aw",%nobits
 725              		.align	2
 728              	last_bad_posture_time:
 729 0000 00000000 		.space	4
 730              		.section	.data.is_posture_correct,"aw"
 733              	is_posture_correct:
 734 0000 01       		.byte	1
 735              		.section	.bss.current_angle,"aw",%nobits
 736              		.align	2
 739              	current_angle:
 740 0000 00000000 		.space	4
 741              		.section	.data.threshold_angle,"aw"
 742              		.align	2
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 16


 745              	threshold_angle:
 746 0000 C2B8B23E 		.word	1051900098
 747              		.section	.bss.reference_vector,"aw",%nobits
 748              		.align	2
 751              	reference_vector:
 752 0000 00000000 		.space	12
 752      00000000 
 752      00000000 
 753              		.section	.bss.measured_vector,"aw",%nobits
 754              		.align	2
 757              	measured_vector:
 758 0000 00000000 		.space	12
 758      00000000 
 758      00000000 
 759              		.text
 760              	.Letext0:
 761              		.file 2 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 762              		.file 3 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 763              		.file 4 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 764              		.file 5 "Core/Inc/accelerometer_controller.h"
 765              		.file 6 "Core/Inc/led_controller.h"
 766              		.file 7 "Core/Inc/haptic_feedback_controller.h"
 767              		.file 8 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/math.h"
 768              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 posture_controller.c
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:19     .text.dot_product:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:24     .text.dot_product:00000000 dot_product
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:87     .text.normalize_vector:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:92     .text.normalize_vector:00000000 normalize_vector
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:197    .text.update_reference_vector:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:202    .text.update_reference_vector:00000000 update_reference_vector
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:273    .text.update_reference_vector:0000003c $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:751    .bss.reference_vector:00000000 reference_vector
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:757    .bss.measured_vector:00000000 measured_vector
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:279    .text.get_angle:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:284    .text.get_angle:00000000 get_angle
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:378    .text.get_angle:00000054 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:385    .text.posture_controller_initialize:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:391    .text.posture_controller_initialize:00000000 posture_controller_initialize
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:442    .text.posture_controller_initialize:00000028 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:745    .data.threshold_angle:00000000 threshold_angle
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:449    .text.posture_controller_update:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:455    .text.posture_controller_update:00000000 posture_controller_update
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:568    .text.posture_controller_update:00000078 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:739    .bss.current_angle:00000000 current_angle
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:728    .bss.last_bad_posture_time:00000000 last_bad_posture_time
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:721    .bss.last_good_posture_time:00000000 last_good_posture_time
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:733    .data.is_posture_correct:00000000 is_posture_correct
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:577    .text.posture_controller_is_posture_correct:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:583    .text.posture_controller_is_posture_correct:00000000 posture_controller_is_posture_correct
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:611    .text.posture_controller_is_posture_correct:00000010 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:616    .text.posture_controller_handle_bad_posture:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:622    .text.posture_controller_handle_bad_posture:00000000 posture_controller_handle_bad_posture
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:655    .text.posture_controller_handle_bad_posture:00000018 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:660    .text.posture_controller_calibrate:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:666    .text.posture_controller_calibrate:00000000 posture_controller_calibrate
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:712    .text.posture_controller_calibrate:00000024 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:718    .bss.last_good_posture_time:00000000 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:725    .bss.last_bad_posture_time:00000000 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:736    .bss.current_angle:00000000 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:742    .data.threshold_angle:00000000 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:748    .bss.reference_vector:00000000 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccUmdcFs.s:754    .bss.measured_vector:00000000 $d

UNDEFINED SYMBOLS
__aeabi_fmul
__aeabi_fadd
sqrtf
__aeabi_fcmpgt
__aeabi_fdiv
accelerometer_controller_get_latest_data
acosf
__aeabi_fcmplt
HAL_GetTick
haptic_feedback_disable
led_off
haptic_feedback_play_waveform
haptic_feedback_start
led_on
