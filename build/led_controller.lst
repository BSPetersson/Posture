ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"led_controller.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/led_controller.c"
  18              		.section	.text.led_controller_initialize,"ax",%progbits
  19              		.align	1
  20              		.global	led_controller_initialize
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	led_controller_initialize:
  26              	.LFB40:
   1:Core/Src/led_controller.c **** #include "led_controller.h"
   2:Core/Src/led_controller.c **** #include "main.h"  // For external references to htim16, etc.
   3:Core/Src/led_controller.c **** 
   4:Core/Src/led_controller.c **** // Extern reference to the TIM16 handle from main.c
   5:Core/Src/led_controller.c **** extern TIM_HandleTypeDef htim16;
   6:Core/Src/led_controller.c **** 
   7:Core/Src/led_controller.c **** /**
   8:Core/Src/led_controller.c ****  * @brief Initializes the LED by starting PWM on TIM16_CH1 (PB8).
   9:Core/Src/led_controller.c ****  */
  10:Core/Src/led_controller.c **** void led_controller_initialize(void)
  11:Core/Src/led_controller.c **** {
  27              		.loc 1 11 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  12:Core/Src/led_controller.c ****     // Start the PWM channel
  13:Core/Src/led_controller.c ****     HAL_TIM_PWM_Start(&htim16, TIM_CHANNEL_1);
  36              		.loc 1 13 5 view .LVU1
  37 0002 0248     		ldr	r0, .L2
  38 0004 0021     		movs	r1, #0
  39 0006 FFF7FEFF 		bl	HAL_TIM_PWM_Start
  40              	.LVL0:
  14:Core/Src/led_controller.c **** }
  41              		.loc 1 14 1 is_stmt 0 view .LVU2
  42              		@ sp needed
  43 000a 10BD     		pop	{r4, pc}
  44              	.L3:
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s 			page 2


  45              		.align	2
  46              	.L2:
  47 000c 00000000 		.word	htim16
  48              		.cfi_endproc
  49              	.LFE40:
  51              		.section	.text.led_on,"ax",%progbits
  52              		.align	1
  53              		.global	led_on
  54              		.syntax unified
  55              		.code	16
  56              		.thumb_func
  58              	led_on:
  59              	.LVL1:
  60              	.LFB41:
  15:Core/Src/led_controller.c **** 
  16:Core/Src/led_controller.c **** /**
  17:Core/Src/led_controller.c ****  * @brief Turns on the LED, scaling the specified percentage (0â€“100) to a 16-bit PWM duty cycle.
  18:Core/Src/led_controller.c ****  * @param percent Brightness as a percentage [0..100]
  19:Core/Src/led_controller.c ****  */
  20:Core/Src/led_controller.c **** void led_on(uint8_t percent)
  21:Core/Src/led_controller.c **** {
  61              		.loc 1 21 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		.loc 1 21 1 is_stmt 0 view .LVU4
  66 0000 10B5     		push	{r4, lr}
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 8
  69              		.cfi_offset 4, -8
  70              		.cfi_offset 14, -4
  22:Core/Src/led_controller.c ****     if (percent > 100) {
  71              		.loc 1 22 5 is_stmt 1 view .LVU5
  72              		.loc 1 22 8 is_stmt 0 view .LVU6
  73 0002 6428     		cmp	r0, #100
  74 0004 00D9     		bls	.L5
  23:Core/Src/led_controller.c ****         percent = 100;
  75              		.loc 1 23 17 view .LVU7
  76 0006 6420     		movs	r0, #100
  77              	.LVL2:
  78              	.L5:
  24:Core/Src/led_controller.c ****     }
  25:Core/Src/led_controller.c ****     // Map 0..100% to 0..65535
  26:Core/Src/led_controller.c ****     uint16_t duty_cycle = (uint16_t)((65535UL * percent) / 100UL);
  79              		.loc 1 26 5 is_stmt 1 view .LVU8
  80              		.loc 1 26 47 is_stmt 0 view .LVU9
  81 0008 0304     		lsls	r3, r0, #16
  82 000a 181A     		subs	r0, r3, r0
  83              	.LVL3:
  84              		.loc 1 26 58 view .LVU10
  85 000c 6421     		movs	r1, #100
  86 000e FFF7FEFF 		bl	__aeabi_uidiv
  87              	.LVL4:
  27:Core/Src/led_controller.c **** 
  28:Core/Src/led_controller.c ****     // Update the CCR (capture compare register) for TIM16 Channel 1
  29:Core/Src/led_controller.c ****     __HAL_TIM_SET_COMPARE(&htim16, TIM_CHANNEL_1, duty_cycle);
  88              		.loc 1 29 5 is_stmt 1 view .LVU11
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s 			page 3


  89 0012 034B     		ldr	r3, .L7
  90 0014 1B68     		ldr	r3, [r3]
  91 0016 0004     		lsls	r0, r0, #16
  92              	.LVL5:
  93              		.loc 1 29 5 is_stmt 0 view .LVU12
  94 0018 000C     		lsrs	r0, r0, #16
  95 001a 5863     		str	r0, [r3, #52]
  30:Core/Src/led_controller.c **** }
  96              		.loc 1 30 1 view .LVU13
  97              		@ sp needed
  98 001c 10BD     		pop	{r4, pc}
  99              	.L8:
 100 001e C046     		.align	2
 101              	.L7:
 102 0020 00000000 		.word	htim16
 103              		.cfi_endproc
 104              	.LFE41:
 106              		.section	.text.led_off,"ax",%progbits
 107              		.align	1
 108              		.global	led_off
 109              		.syntax unified
 110              		.code	16
 111              		.thumb_func
 113              	led_off:
 114              	.LFB42:
  31:Core/Src/led_controller.c **** 
  32:Core/Src/led_controller.c **** /**
  33:Core/Src/led_controller.c ****  * @brief Turns off the LED by setting the duty cycle to 0.
  34:Core/Src/led_controller.c ****  */
  35:Core/Src/led_controller.c **** void led_off(void)
  36:Core/Src/led_controller.c **** {
 115              		.loc 1 36 1 is_stmt 1 view -0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
  37:Core/Src/led_controller.c ****     __HAL_TIM_SET_COMPARE(&htim16, TIM_CHANNEL_1, 0);
 120              		.loc 1 37 5 view .LVU15
 121 0000 024B     		ldr	r3, .L10
 122 0002 1B68     		ldr	r3, [r3]
 123 0004 0022     		movs	r2, #0
 124 0006 5A63     		str	r2, [r3, #52]
  38:Core/Src/led_controller.c **** }
 125              		.loc 1 38 1 is_stmt 0 view .LVU16
 126              		@ sp needed
 127 0008 7047     		bx	lr
 128              	.L11:
 129 000a C046     		.align	2
 130              	.L10:
 131 000c 00000000 		.word	htim16
 132              		.cfi_endproc
 133              	.LFE42:
 135              		.section	.text.led_execute_sequence,"ax",%progbits
 136              		.align	1
 137              		.global	led_execute_sequence
 138              		.syntax unified
 139              		.code	16
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s 			page 4


 140              		.thumb_func
 142              	led_execute_sequence:
 143              	.LVL6:
 144              	.LFB43:
  39:Core/Src/led_controller.c **** 
  40:Core/Src/led_controller.c **** /**
  41:Core/Src/led_controller.c ****  * @brief Executes a blocking LED sequence or pattern.
  42:Core/Src/led_controller.c ****  * @param sequence The desired sequence to execute.
  43:Core/Src/led_controller.c ****  */
  44:Core/Src/led_controller.c **** void led_execute_sequence(led_sequence_t sequence)
  45:Core/Src/led_controller.c **** {
 145              		.loc 1 45 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		.loc 1 45 1 is_stmt 0 view .LVU18
 150 0000 70B5     		push	{r4, r5, r6, lr}
 151              	.LCFI2:
 152              		.cfi_def_cfa_offset 16
 153              		.cfi_offset 4, -16
 154              		.cfi_offset 5, -12
 155              		.cfi_offset 6, -8
 156              		.cfi_offset 14, -4
  46:Core/Src/led_controller.c ****     switch(sequence)
 157              		.loc 1 46 5 is_stmt 1 view .LVU19
 158 0002 0228     		cmp	r0, #2
 159 0004 26D0     		beq	.L22
 160 0006 0328     		cmp	r0, #3
 161 0008 32D0     		beq	.L23
 162 000a 0128     		cmp	r0, #1
 163 000c 0FD0     		beq	.L24
 164              	.LVL7:
 165              	.L12:
  47:Core/Src/led_controller.c ****     {
  48:Core/Src/led_controller.c ****         case LED_SEQ_NONE:
  49:Core/Src/led_controller.c ****             // Do nothing
  50:Core/Src/led_controller.c ****             break;
  51:Core/Src/led_controller.c **** 
  52:Core/Src/led_controller.c ****         case LED_SEQ_THREE_BLINKS:
  53:Core/Src/led_controller.c ****         {
  54:Core/Src/led_controller.c ****             // Three quick blinks at ~50% brightness
  55:Core/Src/led_controller.c ****             for(int i = 0; i < 3; i++)
  56:Core/Src/led_controller.c ****             {
  57:Core/Src/led_controller.c ****                 led_on(50);
  58:Core/Src/led_controller.c ****                 HAL_Delay(200); // ms ON
  59:Core/Src/led_controller.c ****                 led_off();
  60:Core/Src/led_controller.c ****                 HAL_Delay(200); // ms OFF
  61:Core/Src/led_controller.c ****             }
  62:Core/Src/led_controller.c ****         }
  63:Core/Src/led_controller.c ****         break;
  64:Core/Src/led_controller.c **** 
  65:Core/Src/led_controller.c ****         case LED_SEQ_DOUBLE_BLINK:
  66:Core/Src/led_controller.c ****         {
  67:Core/Src/led_controller.c ****             // Two slightly longer blinks at ~80% brightness
  68:Core/Src/led_controller.c ****             for(int i = 0; i < 2; i++)
  69:Core/Src/led_controller.c ****             {
  70:Core/Src/led_controller.c ****                 led_on(80);
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s 			page 5


  71:Core/Src/led_controller.c ****                 HAL_Delay(400);
  72:Core/Src/led_controller.c ****                 led_off();
  73:Core/Src/led_controller.c ****                 HAL_Delay(400);
  74:Core/Src/led_controller.c ****             }
  75:Core/Src/led_controller.c ****         }
  76:Core/Src/led_controller.c ****         break;
  77:Core/Src/led_controller.c **** 
  78:Core/Src/led_controller.c ****         case LED_SEQ_FADE_IN_OUT:
  79:Core/Src/led_controller.c ****         {
  80:Core/Src/led_controller.c ****             // Simple fade in from 0% to 100%, then back out
  81:Core/Src/led_controller.c ****             for(uint8_t val = 0; val <= 100; val++)
  82:Core/Src/led_controller.c ****             {
  83:Core/Src/led_controller.c ****                 led_on(val);        // increment brightness
  84:Core/Src/led_controller.c ****                 HAL_Delay(10);
  85:Core/Src/led_controller.c ****             }
  86:Core/Src/led_controller.c ****             for(uint8_t val = 100; val > 0; val--)
  87:Core/Src/led_controller.c ****             {
  88:Core/Src/led_controller.c ****                 led_on(val);        // decrement brightness
  89:Core/Src/led_controller.c ****                 HAL_Delay(10);
  90:Core/Src/led_controller.c ****             }
  91:Core/Src/led_controller.c ****             led_off();
  92:Core/Src/led_controller.c ****         }
  93:Core/Src/led_controller.c ****         break;
  94:Core/Src/led_controller.c **** 
  95:Core/Src/led_controller.c ****         // Add more sequences here as needed
  96:Core/Src/led_controller.c **** 
  97:Core/Src/led_controller.c ****         default:
  98:Core/Src/led_controller.c ****             // Unrecognized sequence
  99:Core/Src/led_controller.c ****             break;
 100:Core/Src/led_controller.c ****     }
 101:Core/Src/led_controller.c **** }...
 166              		.loc 1 101 1 is_stmt 0 view .LVU20
 167              		@ sp needed
 168 000e 70BD     		pop	{r4, r5, r6, pc}
 169              	.LVL8:
 170              	.L17:
 171              	.LBB2:
  57:Core/Src/led_controller.c ****                 led_on(50);
 172              		.loc 1 57 17 is_stmt 1 view .LVU21
 173 0010 3220     		movs	r0, #50
 174 0012 FFF7FEFF 		bl	led_on
 175              	.LVL9:
  58:Core/Src/led_controller.c ****                 HAL_Delay(200); // ms ON
 176              		.loc 1 58 17 view .LVU22
 177 0016 C820     		movs	r0, #200
 178 0018 FFF7FEFF 		bl	HAL_Delay
 179              	.LVL10:
  59:Core/Src/led_controller.c ****                 led_off();
 180              		.loc 1 59 17 view .LVU23
 181 001c FFF7FEFF 		bl	led_off
 182              	.LVL11:
  60:Core/Src/led_controller.c ****                 HAL_Delay(200); // ms OFF
 183              		.loc 1 60 17 view .LVU24
 184 0020 C820     		movs	r0, #200
 185 0022 FFF7FEFF 		bl	HAL_Delay
 186              	.LVL12:
  55:Core/Src/led_controller.c ****             for(int i = 0; i < 3; i++)
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s 			page 6


 187              		.loc 1 55 36 discriminator 3 view .LVU25
 188 0026 0134     		adds	r4, r4, #1
 189              	.LVL13:
 190              	.L15:
  55:Core/Src/led_controller.c ****             for(int i = 0; i < 3; i++)
 191              		.loc 1 55 30 discriminator 1 view .LVU26
 192 0028 022C     		cmp	r4, #2
 193 002a F1DD     		ble	.L17
 194 002c EFE7     		b	.L12
 195              	.LVL14:
 196              	.L24:
  55:Core/Src/led_controller.c ****             for(int i = 0; i < 3; i++)
 197              		.loc 1 55 30 is_stmt 0 discriminator 1 view .LVU27
 198              	.LBE2:
  46:Core/Src/led_controller.c ****     switch(sequence)
 199              		.loc 1 46 5 view .LVU28
 200 002e 0024     		movs	r4, #0
 201 0030 FAE7     		b	.L15
 202              	.LVL15:
 203              	.L18:
 204              	.LBB3:
  70:Core/Src/led_controller.c ****                 led_on(80);
 205              		.loc 1 70 17 is_stmt 1 view .LVU29
 206 0032 5020     		movs	r0, #80
 207 0034 FFF7FEFF 		bl	led_on
 208              	.LVL16:
  71:Core/Src/led_controller.c ****                 HAL_Delay(400);
 209              		.loc 1 71 17 view .LVU30
 210 0038 C825     		movs	r5, #200
 211 003a 6D00     		lsls	r5, r5, #1
 212 003c 2800     		movs	r0, r5
 213 003e FFF7FEFF 		bl	HAL_Delay
 214              	.LVL17:
  72:Core/Src/led_controller.c ****                 led_off();
 215              		.loc 1 72 17 view .LVU31
 216 0042 FFF7FEFF 		bl	led_off
 217              	.LVL18:
  73:Core/Src/led_controller.c ****                 HAL_Delay(400);
 218              		.loc 1 73 17 view .LVU32
 219 0046 2800     		movs	r0, r5
 220 0048 FFF7FEFF 		bl	HAL_Delay
 221              	.LVL19:
  68:Core/Src/led_controller.c ****             for(int i = 0; i < 2; i++)
 222              		.loc 1 68 36 discriminator 3 view .LVU33
 223 004c 0134     		adds	r4, r4, #1
 224              	.LVL20:
 225              	.L13:
  68:Core/Src/led_controller.c ****             for(int i = 0; i < 2; i++)
 226              		.loc 1 68 30 discriminator 1 view .LVU34
 227 004e 012C     		cmp	r4, #1
 228 0050 EFDD     		ble	.L18
 229 0052 DCE7     		b	.L12
 230              	.LVL21:
 231              	.L22:
  68:Core/Src/led_controller.c ****             for(int i = 0; i < 2; i++)
 232              		.loc 1 68 30 is_stmt 0 discriminator 1 view .LVU35
 233              	.LBE3:
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s 			page 7


  46:Core/Src/led_controller.c ****     switch(sequence)
 234              		.loc 1 46 5 view .LVU36
 235 0054 0024     		movs	r4, #0
 236 0056 FAE7     		b	.L13
 237              	.LVL22:
 238              	.L19:
 239              	.LBB4:
  83:Core/Src/led_controller.c ****                 led_on(val);        // increment brightness
 240              		.loc 1 83 17 is_stmt 1 view .LVU37
 241 0058 2000     		movs	r0, r4
 242 005a FFF7FEFF 		bl	led_on
 243              	.LVL23:
  84:Core/Src/led_controller.c ****                 HAL_Delay(10);
 244              		.loc 1 84 17 view .LVU38
 245 005e 0A20     		movs	r0, #10
 246 0060 FFF7FEFF 		bl	HAL_Delay
 247              	.LVL24:
  81:Core/Src/led_controller.c ****             for(uint8_t val = 0; val <= 100; val++)
 248              		.loc 1 81 49 discriminator 3 view .LVU39
 249 0064 0134     		adds	r4, r4, #1
 250              	.LVL25:
  81:Core/Src/led_controller.c ****             for(uint8_t val = 0; val <= 100; val++)
 251              		.loc 1 81 49 is_stmt 0 discriminator 3 view .LVU40
 252 0066 E4B2     		uxtb	r4, r4
 253              	.LVL26:
 254              	.L14:
  81:Core/Src/led_controller.c ****             for(uint8_t val = 0; val <= 100; val++)
 255              		.loc 1 81 38 is_stmt 1 discriminator 1 view .LVU41
 256 0068 642C     		cmp	r4, #100
 257 006a F5D9     		bls	.L19
 258              	.LBE4:
 259              	.LBB5:
  86:Core/Src/led_controller.c ****             for(uint8_t val = 100; val > 0; val--)
 260              		.loc 1 86 25 is_stmt 0 view .LVU42
 261 006c 6424     		movs	r4, #100
 262              	.LVL27:
  86:Core/Src/led_controller.c ****             for(uint8_t val = 100; val > 0; val--)
 263              		.loc 1 86 25 view .LVU43
 264 006e 09E0     		b	.L20
 265              	.LVL28:
 266              	.L23:
  86:Core/Src/led_controller.c ****             for(uint8_t val = 100; val > 0; val--)
 267              		.loc 1 86 25 view .LVU44
 268              	.LBE5:
  46:Core/Src/led_controller.c ****     switch(sequence)
 269              		.loc 1 46 5 view .LVU45
 270 0070 0024     		movs	r4, #0
 271 0072 F9E7     		b	.L14
 272              	.LVL29:
 273              	.L21:
 274              	.LBB6:
  88:Core/Src/led_controller.c ****                 led_on(val);        // decrement brightness
 275              		.loc 1 88 17 is_stmt 1 view .LVU46
 276 0074 2000     		movs	r0, r4
 277 0076 FFF7FEFF 		bl	led_on
 278              	.LVL30:
  89:Core/Src/led_controller.c ****                 HAL_Delay(10);
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s 			page 8


 279              		.loc 1 89 17 view .LVU47
 280 007a 0A20     		movs	r0, #10
 281 007c FFF7FEFF 		bl	HAL_Delay
 282              	.LVL31:
  86:Core/Src/led_controller.c ****             for(uint8_t val = 100; val > 0; val--)
 283              		.loc 1 86 48 discriminator 3 view .LVU48
 284 0080 013C     		subs	r4, r4, #1
 285              	.LVL32:
  86:Core/Src/led_controller.c ****             for(uint8_t val = 100; val > 0; val--)
 286              		.loc 1 86 48 is_stmt 0 discriminator 3 view .LVU49
 287 0082 E4B2     		uxtb	r4, r4
 288              	.LVL33:
 289              	.L20:
  86:Core/Src/led_controller.c ****             for(uint8_t val = 100; val > 0; val--)
 290              		.loc 1 86 40 is_stmt 1 discriminator 1 view .LVU50
 291 0084 002C     		cmp	r4, #0
 292 0086 F5D1     		bne	.L21
 293              	.LBE6:
  91:Core/Src/led_controller.c ****             led_off();
 294              		.loc 1 91 13 view .LVU51
 295 0088 FFF7FEFF 		bl	led_off
 296              	.LVL34:
  93:Core/Src/led_controller.c ****         break;
 297              		.loc 1 93 9 view .LVU52
 298              		.loc 1 101 1 is_stmt 0 view .LVU53
 299 008c BFE7     		b	.L12
 300              		.cfi_endproc
 301              	.LFE43:
 303              		.text
 304              	.Letext0:
 305              		.file 2 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 306              		.file 3 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 307              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 308              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 309              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 310              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 311              		.file 8 "Core/Inc/led_controller.h"
 312              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 led_controller.c
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s:19     .text.led_controller_initialize:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s:25     .text.led_controller_initialize:00000000 led_controller_initialize
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s:47     .text.led_controller_initialize:0000000c $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s:52     .text.led_on:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s:58     .text.led_on:00000000 led_on
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s:102    .text.led_on:00000020 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s:107    .text.led_off:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s:113    .text.led_off:00000000 led_off
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s:131    .text.led_off:0000000c $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s:136    .text.led_execute_sequence:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccj45wdf.s:142    .text.led_execute_sequence:00000000 led_execute_sequence

UNDEFINED SYMBOLS
HAL_TIM_PWM_Start
htim16
__aeabi_uidiv
HAL_Delay
