ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"led_controller.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/led_controller.c"
  18              		.section	.text.update_pwm,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	update_pwm:
  25              	.LVL0:
  26              	.LFB40:
   1:Core/Src/led_controller.c **** #include "led_controller.h"
   2:Core/Src/led_controller.c **** #include "main.h"  // For external reference to htim16
   3:Core/Src/led_controller.c **** 
   4:Core/Src/led_controller.c **** // External TIM handle from main.c
   5:Core/Src/led_controller.c **** extern TIM_HandleTypeDef htim16;
   6:Core/Src/led_controller.c **** 
   7:Core/Src/led_controller.c **** // Internal state structure for non-blocking LED sequences.
   8:Core/Src/led_controller.c **** typedef struct {
   9:Core/Src/led_controller.c ****     led_sequence_t sequence;   // Current sequence.
  10:Core/Src/led_controller.c ****     bool active;               // True if a sequence is running.
  11:Core/Src/led_controller.c ****     uint32_t next_update;      // Next update time (in ms from HAL_GetTick()).
  12:Core/Src/led_controller.c ****     uint8_t current_blink;     // Number of blinks completed (for blink sequences).
  13:Core/Src/led_controller.c ****     uint8_t substate;          // Used to differentiate phases (e.g. 0 = off, 1 = on).
  14:Core/Src/led_controller.c ****     // Variables for fade in/out sequence:
  15:Core/Src/led_controller.c ****     uint8_t brightness;        // Current brightness (0-100).
  16:Core/Src/led_controller.c ****     int8_t fade_direction;     // +1 for fading in, -1 for fading out.
  17:Core/Src/led_controller.c **** } led_state_t;
  18:Core/Src/led_controller.c **** 
  19:Core/Src/led_controller.c **** static led_state_t led_state;
  20:Core/Src/led_controller.c **** 
  21:Core/Src/led_controller.c **** /**
  22:Core/Src/led_controller.c ****  * @brief Internal function: update PWM duty cycle from percentage.
  23:Core/Src/led_controller.c ****  */
  24:Core/Src/led_controller.c **** static void update_pwm(uint8_t percent)
  25:Core/Src/led_controller.c **** {
  27              		.loc 1 25 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 25 1 is_stmt 0 view .LVU1
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 2


  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  26:Core/Src/led_controller.c ****     if (percent > 100) {
  37              		.loc 1 26 5 is_stmt 1 view .LVU2
  38              		.loc 1 26 8 is_stmt 0 view .LVU3
  39 0002 6428     		cmp	r0, #100
  40 0004 00D9     		bls	.L2
  27:Core/Src/led_controller.c ****         percent = 100;
  41              		.loc 1 27 17 view .LVU4
  42 0006 6420     		movs	r0, #100
  43              	.LVL1:
  44              	.L2:
  28:Core/Src/led_controller.c ****     }
  29:Core/Src/led_controller.c ****     // Map 0..100% to 0..65535.
  30:Core/Src/led_controller.c ****     uint16_t duty_cycle = (uint16_t)((65535UL * percent) / 100UL);
  45              		.loc 1 30 5 is_stmt 1 view .LVU5
  46              		.loc 1 30 47 is_stmt 0 view .LVU6
  47 0008 0304     		lsls	r3, r0, #16
  48 000a 181A     		subs	r0, r3, r0
  49              	.LVL2:
  50              		.loc 1 30 58 view .LVU7
  51 000c 6421     		movs	r1, #100
  52 000e FFF7FEFF 		bl	__aeabi_uidiv
  53              	.LVL3:
  31:Core/Src/led_controller.c ****     __HAL_TIM_SET_COMPARE(&htim16, TIM_CHANNEL_1, duty_cycle);
  54              		.loc 1 31 5 is_stmt 1 view .LVU8
  55 0012 034B     		ldr	r3, .L4
  56 0014 1B68     		ldr	r3, [r3]
  57 0016 0004     		lsls	r0, r0, #16
  58              	.LVL4:
  59              		.loc 1 31 5 is_stmt 0 view .LVU9
  60 0018 000C     		lsrs	r0, r0, #16
  61 001a 5863     		str	r0, [r3, #52]
  32:Core/Src/led_controller.c **** }
  62              		.loc 1 32 1 view .LVU10
  63              		@ sp needed
  64 001c 10BD     		pop	{r4, pc}
  65              	.L5:
  66 001e C046     		.align	2
  67              	.L4:
  68 0020 00000000 		.word	htim16
  69              		.cfi_endproc
  70              	.LFE40:
  72              		.section	.text.led_controller_initialize,"ax",%progbits
  73              		.align	1
  74              		.global	led_controller_initialize
  75              		.syntax unified
  76              		.code	16
  77              		.thumb_func
  79              	led_controller_initialize:
  80              	.LFB41:
  33:Core/Src/led_controller.c **** 
  34:Core/Src/led_controller.c **** void led_controller_initialize(void)
  35:Core/Src/led_controller.c **** {
  81              		.loc 1 35 1 is_stmt 1 view -0
  82              		.cfi_startproc
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 3


  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85 0000 10B5     		push	{r4, lr}
  86              	.LCFI1:
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
  36:Core/Src/led_controller.c ****     // Start PWM on TIM16 Channel 1.
  37:Core/Src/led_controller.c ****     HAL_TIM_PWM_Start(&htim16, TIM_CHANNEL_1);
  90              		.loc 1 37 5 view .LVU12
  91 0002 0748     		ldr	r0, .L7
  92 0004 0021     		movs	r1, #0
  93 0006 FFF7FEFF 		bl	HAL_TIM_PWM_Start
  94              	.LVL5:
  38:Core/Src/led_controller.c **** 
  39:Core/Src/led_controller.c ****     // Initialize state.
  40:Core/Src/led_controller.c ****     led_state.sequence      = LED_SEQ_NONE;
  95              		.loc 1 40 5 view .LVU13
  96              		.loc 1 40 29 is_stmt 0 view .LVU14
  97 000a 064B     		ldr	r3, .L7+4
  98 000c 0022     		movs	r2, #0
  99 000e 1A70     		strb	r2, [r3]
  41:Core/Src/led_controller.c ****     led_state.active        = false;
 100              		.loc 1 41 5 is_stmt 1 view .LVU15
 101              		.loc 1 41 29 is_stmt 0 view .LVU16
 102 0010 5A70     		strb	r2, [r3, #1]
  42:Core/Src/led_controller.c ****     led_state.next_update   = 0;
 103              		.loc 1 42 5 is_stmt 1 view .LVU17
 104              		.loc 1 42 29 is_stmt 0 view .LVU18
 105 0012 5A60     		str	r2, [r3, #4]
  43:Core/Src/led_controller.c ****     led_state.current_blink = 0;
 106              		.loc 1 43 5 is_stmt 1 view .LVU19
 107              		.loc 1 43 29 is_stmt 0 view .LVU20
 108 0014 1A72     		strb	r2, [r3, #8]
  44:Core/Src/led_controller.c ****     led_state.substate      = 0;
 109              		.loc 1 44 5 is_stmt 1 view .LVU21
 110              		.loc 1 44 29 is_stmt 0 view .LVU22
 111 0016 5A72     		strb	r2, [r3, #9]
  45:Core/Src/led_controller.c ****     led_state.brightness    = 0;
 112              		.loc 1 45 5 is_stmt 1 view .LVU23
 113              		.loc 1 45 29 is_stmt 0 view .LVU24
 114 0018 9A72     		strb	r2, [r3, #10]
  46:Core/Src/led_controller.c ****     led_state.fade_direction = 1;
 115              		.loc 1 46 5 is_stmt 1 view .LVU25
 116              		.loc 1 46 30 is_stmt 0 view .LVU26
 117 001a 0132     		adds	r2, r2, #1
 118 001c DA72     		strb	r2, [r3, #11]
  47:Core/Src/led_controller.c **** }
 119              		.loc 1 47 1 view .LVU27
 120              		@ sp needed
 121 001e 10BD     		pop	{r4, pc}
 122              	.L8:
 123              		.align	2
 124              	.L7:
 125 0020 00000000 		.word	htim16
 126 0024 00000000 		.word	led_state
 127              		.cfi_endproc
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 4


 128              	.LFE41:
 130              		.section	.text.led_on,"ax",%progbits
 131              		.align	1
 132              		.global	led_on
 133              		.syntax unified
 134              		.code	16
 135              		.thumb_func
 137              	led_on:
 138              	.LVL6:
 139              	.LFB42:
  48:Core/Src/led_controller.c **** 
  49:Core/Src/led_controller.c **** void led_on(uint8_t percent)
  50:Core/Src/led_controller.c **** {
 140              		.loc 1 50 1 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		.loc 1 50 1 is_stmt 0 view .LVU29
 145 0000 10B5     		push	{r4, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
  51:Core/Src/led_controller.c ****     // Immediately set LED brightness.
  52:Core/Src/led_controller.c ****     update_pwm(percent);
 150              		.loc 1 52 5 is_stmt 1 view .LVU30
 151 0002 FFF7FEFF 		bl	update_pwm
 152              	.LVL7:
  53:Core/Src/led_controller.c ****     // Optionally, if you want to cancel any running sequence on manual control:
  54:Core/Src/led_controller.c ****     // led_state.active = false;
  55:Core/Src/led_controller.c ****     // led_state.sequence = LED_SEQ_NONE;
  56:Core/Src/led_controller.c **** }
 153              		.loc 1 56 1 is_stmt 0 view .LVU31
 154              		@ sp needed
 155 0006 10BD     		pop	{r4, pc}
 156              		.cfi_endproc
 157              	.LFE42:
 159              		.section	.text.led_off,"ax",%progbits
 160              		.align	1
 161              		.global	led_off
 162              		.syntax unified
 163              		.code	16
 164              		.thumb_func
 166              	led_off:
 167              	.LFB43:
  57:Core/Src/led_controller.c **** 
  58:Core/Src/led_controller.c **** void led_off(void)
  59:Core/Src/led_controller.c **** {
 168              		.loc 1 59 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172 0000 10B5     		push	{r4, lr}
 173              	.LCFI3:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 4, -8
 176              		.cfi_offset 14, -4
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 5


  60:Core/Src/led_controller.c ****     update_pwm(0);
 177              		.loc 1 60 5 view .LVU33
 178 0002 0020     		movs	r0, #0
 179 0004 FFF7FEFF 		bl	update_pwm
 180              	.LVL8:
  61:Core/Src/led_controller.c ****     // Optionally cancel any running sequence if manual off is desired.
  62:Core/Src/led_controller.c ****     // led_state.active = false;
  63:Core/Src/led_controller.c ****     // led_state.sequence = LED_SEQ_NONE;
  64:Core/Src/led_controller.c **** }
 181              		.loc 1 64 1 is_stmt 0 view .LVU34
 182              		@ sp needed
 183 0008 10BD     		pop	{r4, pc}
 184              		.cfi_endproc
 185              	.LFE43:
 187              		.section	.text.led_execute_sequence,"ax",%progbits
 188              		.align	1
 189              		.global	led_execute_sequence
 190              		.syntax unified
 191              		.code	16
 192              		.thumb_func
 194              	led_execute_sequence:
 195              	.LVL9:
 196              	.LFB44:
  65:Core/Src/led_controller.c **** 
  66:Core/Src/led_controller.c **** void led_execute_sequence(led_sequence_t sequence)
  67:Core/Src/led_controller.c **** {
 197              		.loc 1 67 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		.loc 1 67 1 is_stmt 0 view .LVU36
 202 0000 10B5     		push	{r4, lr}
 203              	.LCFI4:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 14, -4
  68:Core/Src/led_controller.c ****     // Set the desired sequence.
  69:Core/Src/led_controller.c ****     led_state.sequence = sequence;
 207              		.loc 1 69 5 is_stmt 1 view .LVU37
 208              		.loc 1 69 24 is_stmt 0 view .LVU38
 209 0002 094B     		ldr	r3, .L14
 210 0004 1870     		strb	r0, [r3]
  70:Core/Src/led_controller.c ****     led_state.active = true;
 211              		.loc 1 70 5 is_stmt 1 view .LVU39
 212              		.loc 1 70 22 is_stmt 0 view .LVU40
 213 0006 0122     		movs	r2, #1
 214 0008 5A70     		strb	r2, [r3, #1]
  71:Core/Src/led_controller.c ****     led_state.current_blink = 0;
 215              		.loc 1 71 5 is_stmt 1 view .LVU41
 216              		.loc 1 71 29 is_stmt 0 view .LVU42
 217 000a 0022     		movs	r2, #0
 218 000c 1A72     		strb	r2, [r3, #8]
  72:Core/Src/led_controller.c ****     led_state.substate = 0;
 219              		.loc 1 72 5 is_stmt 1 view .LVU43
 220              		.loc 1 72 24 is_stmt 0 view .LVU44
 221 000e 5A72     		strb	r2, [r3, #9]
  73:Core/Src/led_controller.c ****     // For fade sequence, initialize brightness and direction.
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 6


  74:Core/Src/led_controller.c ****     if (sequence == LED_SEQ_FADE_IN_OUT) {
 222              		.loc 1 74 5 is_stmt 1 view .LVU45
 223              		.loc 1 74 8 is_stmt 0 view .LVU46
 224 0010 0328     		cmp	r0, #3
 225 0012 04D0     		beq	.L13
 226              	.L12:
  75:Core/Src/led_controller.c ****         led_state.brightness = 0;
  76:Core/Src/led_controller.c ****         led_state.fade_direction = 1;
  77:Core/Src/led_controller.c ****     }
  78:Core/Src/led_controller.c ****     // Set next update time to start immediately.
  79:Core/Src/led_controller.c ****     led_state.next_update = HAL_GetTick();
 227              		.loc 1 79 5 is_stmt 1 view .LVU47
 228              		.loc 1 79 29 is_stmt 0 view .LVU48
 229 0014 FFF7FEFF 		bl	HAL_GetTick
 230              	.LVL10:
 231              		.loc 1 79 27 discriminator 1 view .LVU49
 232 0018 034B     		ldr	r3, .L14
 233 001a 5860     		str	r0, [r3, #4]
  80:Core/Src/led_controller.c **** }
 234              		.loc 1 80 1 view .LVU50
 235              		@ sp needed
 236 001c 10BD     		pop	{r4, pc}
 237              	.LVL11:
 238              	.L13:
  75:Core/Src/led_controller.c ****         led_state.brightness = 0;
 239              		.loc 1 75 9 is_stmt 1 view .LVU51
  75:Core/Src/led_controller.c ****         led_state.brightness = 0;
 240              		.loc 1 75 30 is_stmt 0 view .LVU52
 241 001e 9A72     		strb	r2, [r3, #10]
  76:Core/Src/led_controller.c ****     }
 242              		.loc 1 76 9 is_stmt 1 view .LVU53
  76:Core/Src/led_controller.c ****     }
 243              		.loc 1 76 34 is_stmt 0 view .LVU54
 244 0020 0132     		adds	r2, r2, #1
 245 0022 DA72     		strb	r2, [r3, #11]
 246 0024 F6E7     		b	.L12
 247              	.L15:
 248 0026 C046     		.align	2
 249              	.L14:
 250 0028 00000000 		.word	led_state
 251              		.cfi_endproc
 252              	.LFE44:
 254              		.section	.text.led_controller_update,"ax",%progbits
 255              		.align	1
 256              		.global	led_controller_update
 257              		.syntax unified
 258              		.code	16
 259              		.thumb_func
 261              	led_controller_update:
 262              	.LFB45:
  81:Core/Src/led_controller.c **** 
  82:Core/Src/led_controller.c **** void led_controller_update(void)
  83:Core/Src/led_controller.c **** {
 263              		.loc 1 83 1 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 7


 267 0000 70B5     		push	{r4, r5, r6, lr}
 268              	.LCFI5:
 269              		.cfi_def_cfa_offset 16
 270              		.cfi_offset 4, -16
 271              		.cfi_offset 5, -12
 272              		.cfi_offset 6, -8
 273              		.cfi_offset 14, -4
  84:Core/Src/led_controller.c ****     if (!led_state.active || led_state.sequence == LED_SEQ_NONE)
 274              		.loc 1 84 5 view .LVU56
 275              		.loc 1 84 19 is_stmt 0 view .LVU57
 276 0002 434B     		ldr	r3, .L24
 277 0004 5B78     		ldrb	r3, [r3, #1]
 278              		.loc 1 84 8 view .LVU58
 279 0006 002B     		cmp	r3, #0
 280 0008 03D0     		beq	.L16
 281              		.loc 1 84 39 discriminator 1 view .LVU59
 282 000a 414B     		ldr	r3, .L24
 283 000c 1B78     		ldrb	r3, [r3]
 284              		.loc 1 84 27 discriminator 1 view .LVU60
 285 000e 002B     		cmp	r3, #0
 286 0010 00D1     		bne	.L23
 287              	.L16:
  85:Core/Src/led_controller.c ****     {
  86:Core/Src/led_controller.c ****         return;
  87:Core/Src/led_controller.c ****     }
  88:Core/Src/led_controller.c **** 
  89:Core/Src/led_controller.c ****     uint32_t now = HAL_GetTick();
  90:Core/Src/led_controller.c **** 
  91:Core/Src/led_controller.c ****     switch (led_state.sequence)
  92:Core/Src/led_controller.c ****     {
  93:Core/Src/led_controller.c ****         case LED_SEQ_THREE_BLINKS:
  94:Core/Src/led_controller.c ****             // Blink: 200ms on at 50%, 200ms off.
  95:Core/Src/led_controller.c ****             if (now >= led_state.next_update)
  96:Core/Src/led_controller.c ****             {
  97:Core/Src/led_controller.c ****                 if (led_state.substate == 0)
  98:Core/Src/led_controller.c ****                 {
  99:Core/Src/led_controller.c ****                     // Turn LED on at 50%.
 100:Core/Src/led_controller.c ****                     update_pwm(50);
 101:Core/Src/led_controller.c ****                     led_state.next_update = now + 200;
 102:Core/Src/led_controller.c ****                     led_state.substate = 1;
 103:Core/Src/led_controller.c ****                 }
 104:Core/Src/led_controller.c ****                 else // substate == 1
 105:Core/Src/led_controller.c ****                 {
 106:Core/Src/led_controller.c ****                     // Turn LED off.
 107:Core/Src/led_controller.c ****                     update_pwm(0);
 108:Core/Src/led_controller.c ****                     led_state.next_update = now + 200;
 109:Core/Src/led_controller.c ****                     led_state.substate = 0;
 110:Core/Src/led_controller.c ****                     led_state.current_blink++;
 111:Core/Src/led_controller.c ****                     if (led_state.current_blink >= 3)
 112:Core/Src/led_controller.c ****                     {
 113:Core/Src/led_controller.c ****                         // Sequence complete.
 114:Core/Src/led_controller.c ****                         led_state.sequence = LED_SEQ_NONE;
 115:Core/Src/led_controller.c ****                         led_state.active = false;
 116:Core/Src/led_controller.c ****                     }
 117:Core/Src/led_controller.c ****                 }
 118:Core/Src/led_controller.c ****             }
 119:Core/Src/led_controller.c ****             break;
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 8


 120:Core/Src/led_controller.c **** 
 121:Core/Src/led_controller.c ****         case LED_SEQ_DOUBLE_BLINK:
 122:Core/Src/led_controller.c ****             // Blink: 400ms on at 80%, 400ms off.
 123:Core/Src/led_controller.c ****             if (now >= led_state.next_update)
 124:Core/Src/led_controller.c ****             {
 125:Core/Src/led_controller.c ****                 if (led_state.substate == 0)
 126:Core/Src/led_controller.c ****                 {
 127:Core/Src/led_controller.c ****                     update_pwm(80);
 128:Core/Src/led_controller.c ****                     led_state.next_update = now + 400;
 129:Core/Src/led_controller.c ****                     led_state.substate = 1;
 130:Core/Src/led_controller.c ****                 }
 131:Core/Src/led_controller.c ****                 else // substate == 1
 132:Core/Src/led_controller.c ****                 {
 133:Core/Src/led_controller.c ****                     update_pwm(0);
 134:Core/Src/led_controller.c ****                     led_state.next_update = now + 400;
 135:Core/Src/led_controller.c ****                     led_state.substate = 0;
 136:Core/Src/led_controller.c ****                     led_state.current_blink++;
 137:Core/Src/led_controller.c ****                     if (led_state.current_blink >= 2)
 138:Core/Src/led_controller.c ****                     {
 139:Core/Src/led_controller.c ****                         led_state.sequence = LED_SEQ_NONE;
 140:Core/Src/led_controller.c ****                         led_state.active = false;
 141:Core/Src/led_controller.c ****                     }
 142:Core/Src/led_controller.c ****                 }
 143:Core/Src/led_controller.c ****             }
 144:Core/Src/led_controller.c ****             break;
 145:Core/Src/led_controller.c **** 
 146:Core/Src/led_controller.c ****         case LED_SEQ_FADE_IN_OUT:
 147:Core/Src/led_controller.c ****             // Fade in from 0 to 100, then fade out back to 0.
 148:Core/Src/led_controller.c ****             if (now >= led_state.next_update)
 149:Core/Src/led_controller.c ****             {
 150:Core/Src/led_controller.c ****                 update_pwm(led_state.brightness);
 151:Core/Src/led_controller.c ****                 led_state.next_update = now + 10;  // Update every 10ms.
 152:Core/Src/led_controller.c ****                 // Update brightness.
 153:Core/Src/led_controller.c ****                 led_state.brightness += led_state.fade_direction;
 154:Core/Src/led_controller.c ****                 // Check bounds.
 155:Core/Src/led_controller.c ****                 if (led_state.brightness >= 100 && led_state.fade_direction > 0)
 156:Core/Src/led_controller.c ****                 {
 157:Core/Src/led_controller.c ****                     led_state.brightness = 100;
 158:Core/Src/led_controller.c ****                     led_state.fade_direction = -1;
 159:Core/Src/led_controller.c ****                 }
 160:Core/Src/led_controller.c ****                 else if (led_state.brightness == 0 && led_state.fade_direction < 0)
 161:Core/Src/led_controller.c ****                 {
 162:Core/Src/led_controller.c ****                     // Sequence complete.
 163:Core/Src/led_controller.c ****                     update_pwm(0);
 164:Core/Src/led_controller.c ****                     led_state.sequence = LED_SEQ_NONE;
 165:Core/Src/led_controller.c ****                     led_state.active = false;
 166:Core/Src/led_controller.c ****                 }
 167:Core/Src/led_controller.c ****             }
 168:Core/Src/led_controller.c ****             break;
 169:Core/Src/led_controller.c **** 
 170:Core/Src/led_controller.c ****         default:
 171:Core/Src/led_controller.c ****             // Unknown sequence; do nothing.
 172:Core/Src/led_controller.c ****             break;
 173:Core/Src/led_controller.c ****     }
 174:Core/Src/led_controller.c **** }...
 288              		.loc 1 174 1 view .LVU61
 289              		@ sp needed
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 9


 290 0012 70BD     		pop	{r4, r5, r6, pc}
 291              	.L23:
  89:Core/Src/led_controller.c ****     uint32_t now = HAL_GetTick();
 292              		.loc 1 89 5 is_stmt 1 view .LVU62
  89:Core/Src/led_controller.c ****     uint32_t now = HAL_GetTick();
 293              		.loc 1 89 20 is_stmt 0 view .LVU63
 294 0014 FFF7FEFF 		bl	HAL_GetTick
 295              	.LVL12:
 296 0018 0400     		movs	r4, r0
 297              	.LVL13:
  91:Core/Src/led_controller.c ****     switch (led_state.sequence)
 298              		.loc 1 91 5 is_stmt 1 view .LVU64
  91:Core/Src/led_controller.c ****     switch (led_state.sequence)
 299              		.loc 1 91 22 is_stmt 0 view .LVU65
 300 001a 3D4B     		ldr	r3, .L24
 301 001c 1B78     		ldrb	r3, [r3]
  91:Core/Src/led_controller.c ****     switch (led_state.sequence)
 302              		.loc 1 91 5 view .LVU66
 303 001e 022B     		cmp	r3, #2
 304 0020 27D0     		beq	.L18
 305 0022 032B     		cmp	r3, #3
 306 0024 4BD0     		beq	.L19
 307 0026 012B     		cmp	r3, #1
 308 0028 F3D1     		bne	.L16
  95:Core/Src/led_controller.c ****             if (now >= led_state.next_update)
 309              		.loc 1 95 13 is_stmt 1 view .LVU67
  95:Core/Src/led_controller.c ****             if (now >= led_state.next_update)
 310              		.loc 1 95 33 is_stmt 0 view .LVU68
 311 002a 394B     		ldr	r3, .L24
 312 002c 5B68     		ldr	r3, [r3, #4]
  95:Core/Src/led_controller.c ****             if (now >= led_state.next_update)
 313              		.loc 1 95 16 view .LVU69
 314 002e 8342     		cmp	r3, r0
 315 0030 EFD8     		bhi	.L16
  97:Core/Src/led_controller.c ****                 if (led_state.substate == 0)
 316              		.loc 1 97 17 is_stmt 1 view .LVU70
  97:Core/Src/led_controller.c ****                 if (led_state.substate == 0)
 317              		.loc 1 97 30 is_stmt 0 view .LVU71
 318 0032 374B     		ldr	r3, .L24
 319 0034 5B7A     		ldrb	r3, [r3, #9]
  97:Core/Src/led_controller.c ****                 if (led_state.substate == 0)
 320              		.loc 1 97 20 view .LVU72
 321 0036 002B     		cmp	r3, #0
 322 0038 08D1     		bne	.L20
 100:Core/Src/led_controller.c ****                     update_pwm(50);
 323              		.loc 1 100 21 is_stmt 1 view .LVU73
 324 003a 3220     		movs	r0, #50
 325              	.LVL14:
 100:Core/Src/led_controller.c ****                     update_pwm(50);
 326              		.loc 1 100 21 is_stmt 0 view .LVU74
 327 003c FFF7FEFF 		bl	update_pwm
 328              	.LVL15:
 101:Core/Src/led_controller.c ****                     led_state.next_update = now + 200;
 329              		.loc 1 101 21 is_stmt 1 view .LVU75
 101:Core/Src/led_controller.c ****                     led_state.next_update = now + 200;
 330              		.loc 1 101 49 is_stmt 0 view .LVU76
 331 0040 C834     		adds	r4, r4, #200
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 10


 332              	.LVL16:
 101:Core/Src/led_controller.c ****                     led_state.next_update = now + 200;
 333              		.loc 1 101 43 view .LVU77
 334 0042 334B     		ldr	r3, .L24
 335 0044 5C60     		str	r4, [r3, #4]
 102:Core/Src/led_controller.c ****                     led_state.substate = 1;
 336              		.loc 1 102 21 is_stmt 1 view .LVU78
 102:Core/Src/led_controller.c ****                     led_state.substate = 1;
 337              		.loc 1 102 40 is_stmt 0 view .LVU79
 338 0046 0122     		movs	r2, #1
 339 0048 5A72     		strb	r2, [r3, #9]
 340 004a E2E7     		b	.L16
 341              	.LVL17:
 342              	.L20:
 107:Core/Src/led_controller.c ****                     update_pwm(0);
 343              		.loc 1 107 21 is_stmt 1 view .LVU80
 344 004c 0020     		movs	r0, #0
 345              	.LVL18:
 107:Core/Src/led_controller.c ****                     update_pwm(0);
 346              		.loc 1 107 21 is_stmt 0 view .LVU81
 347 004e FFF7FEFF 		bl	update_pwm
 348              	.LVL19:
 108:Core/Src/led_controller.c ****                     led_state.next_update = now + 200;
 349              		.loc 1 108 21 is_stmt 1 view .LVU82
 108:Core/Src/led_controller.c ****                     led_state.next_update = now + 200;
 350              		.loc 1 108 49 is_stmt 0 view .LVU83
 351 0052 C834     		adds	r4, r4, #200
 352              	.LVL20:
 108:Core/Src/led_controller.c ****                     led_state.next_update = now + 200;
 353              		.loc 1 108 43 view .LVU84
 354 0054 2E4A     		ldr	r2, .L24
 355 0056 5460     		str	r4, [r2, #4]
 109:Core/Src/led_controller.c ****                     led_state.substate = 0;
 356              		.loc 1 109 21 is_stmt 1 view .LVU85
 109:Core/Src/led_controller.c ****                     led_state.substate = 0;
 357              		.loc 1 109 40 is_stmt 0 view .LVU86
 358 0058 0023     		movs	r3, #0
 359 005a 5372     		strb	r3, [r2, #9]
 110:Core/Src/led_controller.c ****                     led_state.current_blink++;
 360              		.loc 1 110 21 is_stmt 1 view .LVU87
 110:Core/Src/led_controller.c ****                     led_state.current_blink++;
 361              		.loc 1 110 30 is_stmt 0 view .LVU88
 362 005c 137A     		ldrb	r3, [r2, #8]
 110:Core/Src/led_controller.c ****                     led_state.current_blink++;
 363              		.loc 1 110 44 view .LVU89
 364 005e 0133     		adds	r3, r3, #1
 365 0060 DBB2     		uxtb	r3, r3
 366 0062 1372     		strb	r3, [r2, #8]
 111:Core/Src/led_controller.c ****                     if (led_state.current_blink >= 3)
 367              		.loc 1 111 21 is_stmt 1 view .LVU90
 111:Core/Src/led_controller.c ****                     if (led_state.current_blink >= 3)
 368              		.loc 1 111 24 is_stmt 0 view .LVU91
 369 0064 022B     		cmp	r3, #2
 370 0066 D4D9     		bls	.L16
 114:Core/Src/led_controller.c ****                         led_state.sequence = LED_SEQ_NONE;
 371              		.loc 1 114 25 is_stmt 1 view .LVU92
 114:Core/Src/led_controller.c ****                         led_state.sequence = LED_SEQ_NONE;
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 11


 372              		.loc 1 114 44 is_stmt 0 view .LVU93
 373 0068 1300     		movs	r3, r2
 374 006a 0022     		movs	r2, #0
 375 006c 1A70     		strb	r2, [r3]
 115:Core/Src/led_controller.c ****                         led_state.active = false;
 376              		.loc 1 115 25 is_stmt 1 view .LVU94
 115:Core/Src/led_controller.c ****                         led_state.active = false;
 377              		.loc 1 115 42 is_stmt 0 view .LVU95
 378 006e 5A70     		strb	r2, [r3, #1]
 379 0070 CFE7     		b	.L16
 380              	.LVL21:
 381              	.L18:
 123:Core/Src/led_controller.c ****             if (now >= led_state.next_update)
 382              		.loc 1 123 13 is_stmt 1 view .LVU96
 123:Core/Src/led_controller.c ****             if (now >= led_state.next_update)
 383              		.loc 1 123 33 is_stmt 0 view .LVU97
 384 0072 274B     		ldr	r3, .L24
 385 0074 5B68     		ldr	r3, [r3, #4]
 123:Core/Src/led_controller.c ****             if (now >= led_state.next_update)
 386              		.loc 1 123 16 view .LVU98
 387 0076 8342     		cmp	r3, r0
 388 0078 CBD8     		bhi	.L16
 125:Core/Src/led_controller.c ****                 if (led_state.substate == 0)
 389              		.loc 1 125 17 is_stmt 1 view .LVU99
 125:Core/Src/led_controller.c ****                 if (led_state.substate == 0)
 390              		.loc 1 125 30 is_stmt 0 view .LVU100
 391 007a 254B     		ldr	r3, .L24
 392 007c 5B7A     		ldrb	r3, [r3, #9]
 125:Core/Src/led_controller.c ****                 if (led_state.substate == 0)
 393              		.loc 1 125 20 view .LVU101
 394 007e 002B     		cmp	r3, #0
 395 0080 09D1     		bne	.L21
 127:Core/Src/led_controller.c ****                     update_pwm(80);
 396              		.loc 1 127 21 is_stmt 1 view .LVU102
 397 0082 5020     		movs	r0, #80
 398              	.LVL22:
 127:Core/Src/led_controller.c ****                     update_pwm(80);
 399              		.loc 1 127 21 is_stmt 0 view .LVU103
 400 0084 FFF7FEFF 		bl	update_pwm
 401              	.LVL23:
 128:Core/Src/led_controller.c ****                     led_state.next_update = now + 400;
 402              		.loc 1 128 21 is_stmt 1 view .LVU104
 128:Core/Src/led_controller.c ****                     led_state.next_update = now + 400;
 403              		.loc 1 128 49 is_stmt 0 view .LVU105
 404 0088 9134     		adds	r4, r4, #145
 405              	.LVL24:
 128:Core/Src/led_controller.c ****                     led_state.next_update = now + 400;
 406              		.loc 1 128 49 view .LVU106
 407 008a FF34     		adds	r4, r4, #255
 408              	.LVL25:
 128:Core/Src/led_controller.c ****                     led_state.next_update = now + 400;
 409              		.loc 1 128 43 view .LVU107
 410 008c 204B     		ldr	r3, .L24
 411 008e 5C60     		str	r4, [r3, #4]
 129:Core/Src/led_controller.c ****                     led_state.substate = 1;
 412              		.loc 1 129 21 is_stmt 1 view .LVU108
 129:Core/Src/led_controller.c ****                     led_state.substate = 1;
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 12


 413              		.loc 1 129 40 is_stmt 0 view .LVU109
 414 0090 0122     		movs	r2, #1
 415 0092 5A72     		strb	r2, [r3, #9]
 416 0094 BDE7     		b	.L16
 417              	.LVL26:
 418              	.L21:
 133:Core/Src/led_controller.c ****                     update_pwm(0);
 419              		.loc 1 133 21 is_stmt 1 view .LVU110
 420 0096 0020     		movs	r0, #0
 421              	.LVL27:
 133:Core/Src/led_controller.c ****                     update_pwm(0);
 422              		.loc 1 133 21 is_stmt 0 view .LVU111
 423 0098 FFF7FEFF 		bl	update_pwm
 424              	.LVL28:
 134:Core/Src/led_controller.c ****                     led_state.next_update = now + 400;
 425              		.loc 1 134 21 is_stmt 1 view .LVU112
 134:Core/Src/led_controller.c ****                     led_state.next_update = now + 400;
 426              		.loc 1 134 49 is_stmt 0 view .LVU113
 427 009c 9134     		adds	r4, r4, #145
 428              	.LVL29:
 134:Core/Src/led_controller.c ****                     led_state.next_update = now + 400;
 429              		.loc 1 134 49 view .LVU114
 430 009e FF34     		adds	r4, r4, #255
 431              	.LVL30:
 134:Core/Src/led_controller.c ****                     led_state.next_update = now + 400;
 432              		.loc 1 134 43 view .LVU115
 433 00a0 1B4A     		ldr	r2, .L24
 434 00a2 5460     		str	r4, [r2, #4]
 135:Core/Src/led_controller.c ****                     led_state.substate = 0;
 435              		.loc 1 135 21 is_stmt 1 view .LVU116
 135:Core/Src/led_controller.c ****                     led_state.substate = 0;
 436              		.loc 1 135 40 is_stmt 0 view .LVU117
 437 00a4 0023     		movs	r3, #0
 438 00a6 5372     		strb	r3, [r2, #9]
 136:Core/Src/led_controller.c ****                     led_state.current_blink++;
 439              		.loc 1 136 21 is_stmt 1 view .LVU118
 136:Core/Src/led_controller.c ****                     led_state.current_blink++;
 440              		.loc 1 136 30 is_stmt 0 view .LVU119
 441 00a8 137A     		ldrb	r3, [r2, #8]
 136:Core/Src/led_controller.c ****                     led_state.current_blink++;
 442              		.loc 1 136 44 view .LVU120
 443 00aa 0133     		adds	r3, r3, #1
 444 00ac DBB2     		uxtb	r3, r3
 445 00ae 1372     		strb	r3, [r2, #8]
 137:Core/Src/led_controller.c ****                     if (led_state.current_blink >= 2)
 446              		.loc 1 137 21 is_stmt 1 view .LVU121
 137:Core/Src/led_controller.c ****                     if (led_state.current_blink >= 2)
 447              		.loc 1 137 24 is_stmt 0 view .LVU122
 448 00b0 012B     		cmp	r3, #1
 449 00b2 AED9     		bls	.L16
 139:Core/Src/led_controller.c ****                         led_state.sequence = LED_SEQ_NONE;
 450              		.loc 1 139 25 is_stmt 1 view .LVU123
 139:Core/Src/led_controller.c ****                         led_state.sequence = LED_SEQ_NONE;
 451              		.loc 1 139 44 is_stmt 0 view .LVU124
 452 00b4 1300     		movs	r3, r2
 453 00b6 0022     		movs	r2, #0
 454 00b8 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 13


 140:Core/Src/led_controller.c ****                         led_state.active = false;
 455              		.loc 1 140 25 is_stmt 1 view .LVU125
 140:Core/Src/led_controller.c ****                         led_state.active = false;
 456              		.loc 1 140 42 is_stmt 0 view .LVU126
 457 00ba 5A70     		strb	r2, [r3, #1]
 458 00bc A9E7     		b	.L16
 459              	.LVL31:
 460              	.L19:
 148:Core/Src/led_controller.c ****             if (now >= led_state.next_update)
 461              		.loc 1 148 13 is_stmt 1 view .LVU127
 148:Core/Src/led_controller.c ****             if (now >= led_state.next_update)
 462              		.loc 1 148 33 is_stmt 0 view .LVU128
 463 00be 144B     		ldr	r3, .L24
 464 00c0 5B68     		ldr	r3, [r3, #4]
 148:Core/Src/led_controller.c ****             if (now >= led_state.next_update)
 465              		.loc 1 148 16 view .LVU129
 466 00c2 8342     		cmp	r3, r0
 467 00c4 A5D8     		bhi	.L16
 150:Core/Src/led_controller.c ****                 update_pwm(led_state.brightness);
 468              		.loc 1 150 17 is_stmt 1 view .LVU130
 469 00c6 124D     		ldr	r5, .L24
 470 00c8 A87A     		ldrb	r0, [r5, #10]
 471              	.LVL32:
 150:Core/Src/led_controller.c ****                 update_pwm(led_state.brightness);
 472              		.loc 1 150 17 is_stmt 0 view .LVU131
 473 00ca FFF7FEFF 		bl	update_pwm
 474              	.LVL33:
 151:Core/Src/led_controller.c ****                 led_state.next_update = now + 10;  // Update every 10ms.
 475              		.loc 1 151 17 is_stmt 1 view .LVU132
 151:Core/Src/led_controller.c ****                 led_state.next_update = now + 10;  // Update every 10ms.
 476              		.loc 1 151 45 is_stmt 0 view .LVU133
 477 00ce 0A34     		adds	r4, r4, #10
 478              	.LVL34:
 151:Core/Src/led_controller.c ****                 led_state.next_update = now + 10;  // Update every 10ms.
 479              		.loc 1 151 39 view .LVU134
 480 00d0 6C60     		str	r4, [r5, #4]
 153:Core/Src/led_controller.c ****                 led_state.brightness += led_state.fade_direction;
 481              		.loc 1 153 17 is_stmt 1 view .LVU135
 153:Core/Src/led_controller.c ****                 led_state.brightness += led_state.fade_direction;
 482              		.loc 1 153 26 is_stmt 0 view .LVU136
 483 00d2 AB7A     		ldrb	r3, [r5, #10]
 153:Core/Src/led_controller.c ****                 led_state.brightness += led_state.fade_direction;
 484              		.loc 1 153 50 view .LVU137
 485 00d4 0B21     		movs	r1, #11
 486 00d6 6956     		ldrsb	r1, [r5, r1]
 487 00d8 EA7A     		ldrb	r2, [r5, #11]
 153:Core/Src/led_controller.c ****                 led_state.brightness += led_state.fade_direction;
 488              		.loc 1 153 38 view .LVU138
 489 00da 9B18     		adds	r3, r3, r2
 490 00dc DBB2     		uxtb	r3, r3
 491 00de AB72     		strb	r3, [r5, #10]
 155:Core/Src/led_controller.c ****                 if (led_state.brightness >= 100 && led_state.fade_direction > 0)
 492              		.loc 1 155 17 is_stmt 1 view .LVU139
 155:Core/Src/led_controller.c ****                 if (led_state.brightness >= 100 && led_state.fade_direction > 0)
 493              		.loc 1 155 20 is_stmt 0 view .LVU140
 494 00e0 632B     		cmp	r3, #99
 495 00e2 07D9     		bls	.L22
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 14


 155:Core/Src/led_controller.c ****                 if (led_state.brightness >= 100 && led_state.fade_direction > 0)
 496              		.loc 1 155 49 discriminator 1 view .LVU141
 497 00e4 0029     		cmp	r1, #0
 498 00e6 05DD     		ble	.L22
 157:Core/Src/led_controller.c ****                     led_state.brightness = 100;
 499              		.loc 1 157 21 is_stmt 1 view .LVU142
 157:Core/Src/led_controller.c ****                     led_state.brightness = 100;
 500              		.loc 1 157 42 is_stmt 0 view .LVU143
 501 00e8 094B     		ldr	r3, .L24
 502 00ea 6422     		movs	r2, #100
 503 00ec 9A72     		strb	r2, [r3, #10]
 158:Core/Src/led_controller.c ****                     led_state.fade_direction = -1;
 504              		.loc 1 158 21 is_stmt 1 view .LVU144
 158:Core/Src/led_controller.c ****                     led_state.fade_direction = -1;
 505              		.loc 1 158 46 is_stmt 0 view .LVU145
 506 00ee 9B32     		adds	r2, r2, #155
 507 00f0 DA72     		strb	r2, [r3, #11]
 508 00f2 8EE7     		b	.L16
 509              	.L22:
 160:Core/Src/led_controller.c ****                 else if (led_state.brightness == 0 && led_state.fade_direction < 0)
 510              		.loc 1 160 22 is_stmt 1 view .LVU146
 160:Core/Src/led_controller.c ****                 else if (led_state.brightness == 0 && led_state.fade_direction < 0)
 511              		.loc 1 160 25 is_stmt 0 view .LVU147
 512 00f4 002B     		cmp	r3, #0
 513 00f6 00D0     		beq	.LCB375
 514 00f8 8BE7     		b	.L16	@long jump
 515              	.LCB375:
 160:Core/Src/led_controller.c ****                 else if (led_state.brightness == 0 && led_state.fade_direction < 0)
 516              		.loc 1 160 52 discriminator 1 view .LVU148
 517 00fa 0029     		cmp	r1, #0
 518 00fc 00DB     		blt	.LCB377
 519 00fe 88E7     		b	.L16	@long jump
 520              	.LCB377:
 163:Core/Src/led_controller.c ****                     update_pwm(0);
 521              		.loc 1 163 21 is_stmt 1 view .LVU149
 522 0100 0020     		movs	r0, #0
 523 0102 FFF7FEFF 		bl	update_pwm
 524              	.LVL35:
 164:Core/Src/led_controller.c ****                     led_state.sequence = LED_SEQ_NONE;
 525              		.loc 1 164 21 view .LVU150
 164:Core/Src/led_controller.c ****                     led_state.sequence = LED_SEQ_NONE;
 526              		.loc 1 164 40 is_stmt 0 view .LVU151
 527 0106 024B     		ldr	r3, .L24
 528 0108 0022     		movs	r2, #0
 529 010a 1A70     		strb	r2, [r3]
 165:Core/Src/led_controller.c ****                     led_state.active = false;
 530              		.loc 1 165 21 is_stmt 1 view .LVU152
 165:Core/Src/led_controller.c ****                     led_state.active = false;
 531              		.loc 1 165 38 is_stmt 0 view .LVU153
 532 010c 5A70     		strb	r2, [r3, #1]
 533 010e 80E7     		b	.L16
 534              	.L25:
 535              		.align	2
 536              	.L24:
 537 0110 00000000 		.word	led_state
 538              		.cfi_endproc
 539              	.LFE45:
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 15


 541              		.section	.bss.led_state,"aw",%nobits
 542              		.align	2
 545              	led_state:
 546 0000 00000000 		.space	12
 546      00000000 
 546      00000000 
 547              		.text
 548              	.Letext0:
 549              		.file 2 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 550              		.file 3 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 551              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 552              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 553              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 554              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 555              		.file 8 "Core/Inc/led_controller.h"
 556              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 led_controller.c
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:19     .text.update_pwm:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:24     .text.update_pwm:00000000 update_pwm
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:68     .text.update_pwm:00000020 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:73     .text.led_controller_initialize:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:79     .text.led_controller_initialize:00000000 led_controller_initialize
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:125    .text.led_controller_initialize:00000020 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:545    .bss.led_state:00000000 led_state
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:131    .text.led_on:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:137    .text.led_on:00000000 led_on
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:160    .text.led_off:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:166    .text.led_off:00000000 led_off
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:188    .text.led_execute_sequence:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:194    .text.led_execute_sequence:00000000 led_execute_sequence
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:250    .text.led_execute_sequence:00000028 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:255    .text.led_controller_update:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:261    .text.led_controller_update:00000000 led_controller_update
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:537    .text.led_controller_update:00000110 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccJEp025.s:542    .bss.led_state:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
htim16
HAL_TIM_PWM_Start
HAL_GetTick
