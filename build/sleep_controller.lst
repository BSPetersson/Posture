ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccjUOCzi.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"sleep_controller.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/sleep_controller.c"
  18              		.section	.text.sleep_controller_activate_sleep_mode,"ax",%progbits
  19              		.align	1
  20              		.global	sleep_controller_activate_sleep_mode
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	sleep_controller_activate_sleep_mode:
  26              	.LFB40:
   1:Core/Src/sleep_controller.c **** #include "sleep_controller.h"
   2:Core/Src/sleep_controller.c **** #include "accelerometer_controller.h"
   3:Core/Src/sleep_controller.c **** #include "haptic_feedback_controller.h"
   4:Core/Src/sleep_controller.c **** #include "stm32f0xx_hal.h"
   5:Core/Src/sleep_controller.c **** 
   6:Core/Src/sleep_controller.c **** /* Optional flag to track sleep state */
   7:Core/Src/sleep_controller.c **** static volatile uint8_t sleep_mode_active = 0;
   8:Core/Src/sleep_controller.c **** 
   9:Core/Src/sleep_controller.c **** void sleep_controller_activate_sleep_mode(void)
  10:Core/Src/sleep_controller.c **** {
  27              		.loc 1 10 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  11:Core/Src/sleep_controller.c ****     // Ensure that the interrupt pin (GPIO_PIN_1 on GPIOA) is low before sleeping.
  12:Core/Src/sleep_controller.c ****     // If it is high, wait until it clears.
  13:Core/Src/sleep_controller.c ****     clear_accelerometer_interrupts();
  36              		.loc 1 13 5 view .LVU1
  37 0002 FFF7FEFF 		bl	clear_accelerometer_interrupts
  38              	.LVL0:
  14:Core/Src/sleep_controller.c ****     if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1) == GPIO_PIN_SET)
  39              		.loc 1 14 5 view .LVU2
  40              		.loc 1 14 9 is_stmt 0 view .LVU3
  41 0006 9020     		movs	r0, #144
  42 0008 0221     		movs	r1, #2
  43 000a C005     		lsls	r0, r0, #23
  44 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccjUOCzi.s 			page 2


  45              	.LVL1:
  46              		.loc 1 14 8 discriminator 1 view .LVU4
  47 0010 0128     		cmp	r0, #1
  48 0012 12D0     		beq	.L1
  15:Core/Src/sleep_controller.c ****     {
  16:Core/Src/sleep_controller.c ****         return;
  17:Core/Src/sleep_controller.c ****     }
  18:Core/Src/sleep_controller.c **** 
  19:Core/Src/sleep_controller.c ****     haptic_feedback_disable();
  49              		.loc 1 19 5 is_stmt 1 view .LVU5
  50 0014 FFF7FEFF 		bl	haptic_feedback_disable
  51              	.LVL2:
  20:Core/Src/sleep_controller.c **** 
  21:Core/Src/sleep_controller.c ****     /* Mark that we are about to sleep */
  22:Core/Src/sleep_controller.c ****     sleep_mode_active = 1;
  52              		.loc 1 22 5 view .LVU6
  53              		.loc 1 22 23 is_stmt 0 view .LVU7
  54 0018 084C     		ldr	r4, .L3
  55 001a 0123     		movs	r3, #1
  56 001c 2370     		strb	r3, [r4]
  23:Core/Src/sleep_controller.c **** 
  24:Core/Src/sleep_controller.c ****     /* Optional: Perform any pre-sleep tasks here, like disabling nonessential peripherals */
  25:Core/Src/sleep_controller.c **** 
  26:Core/Src/sleep_controller.c ****     /* Suspend the SysTick interrupt to avoid unwanted wake-ups */
  27:Core/Src/sleep_controller.c ****     HAL_SuspendTick();
  57              		.loc 1 27 5 is_stmt 1 view .LVU8
  58 001e FFF7FEFF 		bl	HAL_SuspendTick
  59              	.LVL3:
  28:Core/Src/sleep_controller.c **** 
  29:Core/Src/sleep_controller.c ****     /* Enter Sleep mode.
  30:Core/Src/sleep_controller.c ****        PWR_MAINREGULATOR_ON: keep the main regulator on.
  31:Core/Src/sleep_controller.c ****        PWR_SLEEPENTRY_WFI: use the Wait For Interrupt instruction to enter sleep.
  32:Core/Src/sleep_controller.c ****        In this mode, the CPU stops until any enabled interrupt (e.g. from GPIO_PIN_0) occurs.
  33:Core/Src/sleep_controller.c ****     */
  34:Core/Src/sleep_controller.c ****     HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_SLEEPENTRY_WFI);
  60              		.loc 1 34 5 view .LVU9
  61 0022 0121     		movs	r1, #1
  62 0024 0020     		movs	r0, #0
  63 0026 FFF7FEFF 		bl	HAL_PWR_EnterSLEEPMode
  64              	.LVL4:
  35:Core/Src/sleep_controller.c **** 
  36:Core/Src/sleep_controller.c ****     /* When an interrupt wakes the MCU, execution resumes here */
  37:Core/Src/sleep_controller.c **** 
  38:Core/Src/sleep_controller.c ****     /* Resume the SysTick interrupt */
  39:Core/Src/sleep_controller.c ****     HAL_ResumeTick();
  65              		.loc 1 39 5 view .LVU10
  66 002a FFF7FEFF 		bl	HAL_ResumeTick
  67              	.LVL5:
  40:Core/Src/sleep_controller.c **** 
  41:Core/Src/sleep_controller.c ****     haptic_feedback_enable();
  68              		.loc 1 41 5 view .LVU11
  69 002e FFF7FEFF 		bl	haptic_feedback_enable
  70              	.LVL6:
  42:Core/Src/sleep_controller.c ****     haptic_feedback_controller_initialize();
  71              		.loc 1 42 5 view .LVU12
  72 0032 FFF7FEFF 		bl	haptic_feedback_controller_initialize
  73              	.LVL7:
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccjUOCzi.s 			page 3


  43:Core/Src/sleep_controller.c **** 
  44:Core/Src/sleep_controller.c **** 
  45:Core/Src/sleep_controller.c ****     /* Mark that sleep is no longer active */
  46:Core/Src/sleep_controller.c ****     sleep_mode_active = 0;
  74              		.loc 1 46 5 view .LVU13
  75              		.loc 1 46 23 is_stmt 0 view .LVU14
  76 0036 0023     		movs	r3, #0
  77 0038 2370     		strb	r3, [r4]
  78              	.L1:
  47:Core/Src/sleep_controller.c **** }
  79              		.loc 1 47 1 view .LVU15
  80              		@ sp needed
  81 003a 10BD     		pop	{r4, pc}
  82              	.L4:
  83              		.align	2
  84              	.L3:
  85 003c 00000000 		.word	sleep_mode_active
  86              		.cfi_endproc
  87              	.LFE40:
  89              		.section	.text.sleep_controller_wake_device,"ax",%progbits
  90              		.align	1
  91              		.global	sleep_controller_wake_device
  92              		.syntax unified
  93              		.code	16
  94              		.thumb_func
  96              	sleep_controller_wake_device:
  97              	.LFB41:
  48:Core/Src/sleep_controller.c **** 
  49:Core/Src/sleep_controller.c **** void sleep_controller_wake_device(void)
  50:Core/Src/sleep_controller.c **** {
  98              		.loc 1 50 1 is_stmt 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
  51:Core/Src/sleep_controller.c ****     /* 
  52:Core/Src/sleep_controller.c ****        This function is intended to be called from an interrupt callback (for example, when GPIO_PI
  53:Core/Src/sleep_controller.c ****        For the simple Sleep mode entered via HAL_PWR_EnterSLEEPMode, the wake-up happens automatica
  54:Core/Src/sleep_controller.c ****        an interrupt occurs. This function is a placeholder where you can add any extra post-wake-up
  55:Core/Src/sleep_controller.c ****        such as reinitializing clocks, peripherals, or clearing flags.
  56:Core/Src/sleep_controller.c ****     */
  57:Core/Src/sleep_controller.c **** 
  58:Core/Src/sleep_controller.c ****     /* Example: if additional reinitialization is needed, add it here. */
  59:Core/Src/sleep_controller.c **** }...
 103              		.loc 1 59 1 view .LVU17
 104              		@ sp needed
 105 0000 7047     		bx	lr
 106              		.cfi_endproc
 107              	.LFE41:
 109              		.section	.bss.sleep_mode_active,"aw",%nobits
 112              	sleep_mode_active:
 113 0000 00       		.space	1
 114              		.text
 115              	.Letext0:
 116              		.file 2 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 117              		.file 3 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 118              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccjUOCzi.s 			page 4


 119              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 120              		.file 6 "Core/Inc/haptic_feedback_controller.h"
 121              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 122              		.file 8 "Core/Inc/accelerometer_controller.h"
 123              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pwr.h"
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccjUOCzi.s 			page 5


DEFINED SYMBOLS
                            *ABS*:00000000 sleep_controller.c
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccjUOCzi.s:19     .text.sleep_controller_activate_sleep_mode:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccjUOCzi.s:25     .text.sleep_controller_activate_sleep_mode:00000000 sleep_controller_activate_sleep_mode
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccjUOCzi.s:85     .text.sleep_controller_activate_sleep_mode:0000003c $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccjUOCzi.s:112    .bss.sleep_mode_active:00000000 sleep_mode_active
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccjUOCzi.s:90     .text.sleep_controller_wake_device:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccjUOCzi.s:96     .text.sleep_controller_wake_device:00000000 sleep_controller_wake_device
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccjUOCzi.s:113    .bss.sleep_mode_active:00000000 $d

UNDEFINED SYMBOLS
clear_accelerometer_interrupts
HAL_GPIO_ReadPin
haptic_feedback_disable
HAL_SuspendTick
HAL_PWR_EnterSLEEPMode
HAL_ResumeTick
haptic_feedback_enable
haptic_feedback_controller_initialize
