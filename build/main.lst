ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB48:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "string.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** #define UART_BUFFER_SIZE 256
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** TIM_HandleTypeDef htim16;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** UART_HandleTypeDef huart1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** static void MX_GPIO_Init(void);
  59:Core/Src/main.c **** static void MX_I2C1_Init(void);
  60:Core/Src/main.c **** static void MX_TIM16_Init(void);
  61:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  67:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /**
  72:Core/Src/main.c ****   * @brief  The application entry point.
  73:Core/Src/main.c ****   * @retval int
  74:Core/Src/main.c ****   */
  75:Core/Src/main.c **** int main(void)
  76:Core/Src/main.c **** {
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.c ****   /* USER CODE END 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  84:Core/Src/main.c ****   HAL_Init();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END Init */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Configure the system clock */
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 3


  91:Core/Src/main.c ****   SystemClock_Config();
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Initialize all configured peripherals */
  98:Core/Src/main.c ****   MX_GPIO_Init();
  99:Core/Src/main.c ****   MX_I2C1_Init();
 100:Core/Src/main.c ****   MX_TIM16_Init();
 101:Core/Src/main.c ****   MX_USART1_UART_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c ****   HAL_Delay(100);  // Give time for the accelerometer to boot up
 104:Core/Src/main.c ****   haptic_feedback_controller_initialize();
 105:Core/Src/main.c ****   accelerometer_controller_initialize();
 106:Core/Src/main.c ****   led_controller_initialize();
 107:Core/Src/main.c ****   button_controller_initialize();
 108:Core/Src/main.c ****   state_machine_initialize();
 109:Core/Src/main.c ****   posture_controller_initialize();
 110:Core/Src/main.c ****   /* USER CODE END 2 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Infinite loop */
 113:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 114:Core/Src/main.c ****   led_execute_sequence(LED_SEQ_THREE_BLINKS);
 115:Core/Src/main.c ****   bool first_time_sleep = true;
 116:Core/Src/main.c ****   accel_data_t accel_data;
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   char uart_buffer[UART_BUFFER_SIZE];
 119:Core/Src/main.c ****   int offset = 0;
 120:Core/Src/main.c ****   while (1)
 121:Core/Src/main.c ****   {
 122:Core/Src/main.c ****   //  state_machine_update();
 123:Core/Src/main.c ****     posture_controller_update();
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****     // if (int1_flag) {
 126:Core/Src/main.c ****     //   led_execute_sequence(LED_SEQ_DOUBLE_BLINK);
 127:Core/Src/main.c ****     //   int1_flag = false;
 128:Core/Src/main.c ****     // }
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****     // if (int2_flag) {
 131:Core/Src/main.c ****     //   led_execute_sequence(LED_SEQ_FADE_IN_OUT);
 132:Core/Src/main.c ****     //   int2_flag = false;
 133:Core/Src/main.c ****     // }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****     // // HAL_Delay(1000);
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     // // Fetch data from all relevant registers
 138:Core/Src/main.c ****     // uint8_t sysmod = get_sysmod();
 139:Core/Src/main.c ****     // uint8_t ff_mt_src = get_ff_mt_src();
 140:Core/Src/main.c ****     // uint8_t int_source = get_int_source();
 141:Core/Src/main.c ****     // uint8_t transient_src = get_transient_src();
 142:Core/Src/main.c ****     // accelerometer_read_mps2(&accel_data);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****     // clear_accelerometer_interrupts();
 145:Core/Src/main.c ****     // sleep_controller_activate_sleep_mode();
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****     // led_execute_sequence(LED_SEQ_THREE_BLINKS);
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 4


 148:Core/Src/main.c ****     // led_execute_sequence(LED_SEQ_DOUBLE_BLINK);
 149:Core/Src/main.c ****     // led_execute_sequence(LED_SEQ_FADE_IN_OUT);
 150:Core/Src/main.c ****     // led_execute_sequence(LED_SEQ_THREE_BLINKS);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****     // // Format SYSMOD
 153:Core/Src/main.c ****     // uart_buffer[0] = '\0';
 154:Core/Src/main.c ****     // offset = 0;
 155:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 156:Core/Src/main.c ****     //                    "SYSMOD: 0x%02X\r\n", sysmod);
 157:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 158:Core/Src/main.c ****     //                    "  - Mode: %s\r\n", (sysmod & 0x03) == 0 ? "Standby" :
 159:Core/Src/main.c ****     //                                       (sysmod & 0x03) == 1 ? "Wake" : "Sleep");
 160:Core/Src/main.c ****     // HAL_UART_Transmit(&huart1, (uint8_t *)uart_buffer, strlen(uart_buffer), HAL_MAX_DELAY);
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****     // // Format FF_MT_SRC
 163:Core/Src/main.c ****     // offset = 0;
 164:Core/Src/main.c ****     // uart_buffer[0] = '\0';
 165:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 166:Core/Src/main.c ****     //                    "FF_MT_SRC: 0x%02X\r\n", ff_mt_src);
 167:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 168:Core/Src/main.c ****     //                    "  - Motion/Freefall detected: %s\r\n", (ff_mt_src & 0x80) ? "True" : "Fa
 169:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 170:Core/Src/main.c ****     //                    "  - X motion: %s\r\n", (ff_mt_src & 0x02) ? "True" : "False");
 171:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 172:Core/Src/main.c ****     //                    "  - Y motion: %s\r\n", (ff_mt_src & 0x04) ? "True" : "False");
 173:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 174:Core/Src/main.c ****     //                    "  - Z motion: %s\r\n", (ff_mt_src & 0x08) ? "True" : "False");
 175:Core/Src/main.c ****     // HAL_UART_Transmit(&huart1, (uint8_t *)uart_buffer, strlen(uart_buffer), HAL_MAX_DELAY);
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****     // // Format INT_SOURCE
 178:Core/Src/main.c ****     // offset = 0;
 179:Core/Src/main.c ****     // uart_buffer[0] = '\0';
 180:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 181:Core/Src/main.c ****     //                    "INT_SOURCE: 0x%02X\r\n", int_source);
 182:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 183:Core/Src/main.c ****     //                    "  - Data Ready: %s\r\n", (int_source & 0x01) ? "True" : "False");
 184:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 185:Core/Src/main.c ****     //                    "  - Motion/Freefall: %s\r\n", (int_source & 0x04) ? "True" : "False");
 186:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 187:Core/Src/main.c ****     //                    "  - Transient: %s\r\n", (int_source & 0x20) ? "True" : "False");
 188:Core/Src/main.c ****     // HAL_UART_Transmit(&huart1, (uint8_t *)uart_buffer, strlen(uart_buffer), HAL_MAX_DELAY);
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****     // // Format TRANSIENT_SRC
 191:Core/Src/main.c ****     // offset = 0;
 192:Core/Src/main.c ****     // uart_buffer[0] = '\0';
 193:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 194:Core/Src/main.c ****     //                    "TRANSIENT_SRC: 0x%02X\r\n", transient_src);
 195:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 196:Core/Src/main.c ****     //                    "  - Transient detected: %s\r\n", (transient_src & 0x40) ? "True" : "Fals
 197:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 198:Core/Src/main.c ****     //                    "  - X transient: %s\r\n", (transient_src & 0x02) ? "True" : "False");
 199:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 200:Core/Src/main.c ****     //                    "  - Y transient: %s\r\n", (transient_src & 0x04) ? "True" : "False");
 201:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 202:Core/Src/main.c ****     //                    "  - Z transient: %s\r\n", (transient_src & 0x08) ? "True" : "False");
 203:Core/Src/main.c ****     // HAL_UART_Transmit(&huart1, (uint8_t *)uart_buffer, strlen(uart_buffer), HAL_MAX_DELAY);
 204:Core/Src/main.c **** 
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 5


 205:Core/Src/main.c ****     // // Format Accelerometer Data
 206:Core/Src/main.c ****     // // Scale the float values by 100 to preserve two decimal places
 207:Core/Src/main.c ****     // int32_t x_scaled = (int32_t)(accel_data.x_mps2 * 100);
 208:Core/Src/main.c ****     // int32_t y_scaled = (int32_t)(accel_data.y_mps2 * 100);
 209:Core/Src/main.c ****     // int32_t z_scaled = (int32_t)(accel_data.z_mps2 * 100);
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****     // // Construct the UART message
 212:Core/Src/main.c ****     // offset = 0;
 213:Core/Src/main.c ****     // uart_buffer[0] = '\0';
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****     // // Header
 216:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 217:Core/Src/main.c ****     //                     "Accelerometer Data:\r\n");
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****     // // X-axis
 220:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 221:Core/Src/main.c ****     //                     "  - X: %ld.%02ld m/s^2\r\n",
 222:Core/Src/main.c ****     //                     x_scaled / 100,
 223:Core/Src/main.c ****     //                     (x_scaled < 0 ? -(x_scaled % 100) : (x_scaled % 100)));
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****     // // Y-axis
 226:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 227:Core/Src/main.c ****     //                     "  - Y: %ld.%02ld m/s^2\r\n",
 228:Core/Src/main.c ****     //                     y_scaled / 100,
 229:Core/Src/main.c ****     //                     (y_scaled < 0 ? -(y_scaled % 100) : (y_scaled % 100)));
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****     // // Z-axis
 232:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 233:Core/Src/main.c ****     //                     "  - Z: %ld.%02ld m/s^2\r\n",
 234:Core/Src/main.c ****     //                     z_scaled / 100,
 235:Core/Src/main.c ****     //                     (z_scaled < 0 ? -(z_scaled % 100) : (z_scaled % 100)));
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****     // // Delimiter
 238:Core/Src/main.c ****     // offset += snprintf(uart_buffer + offset, UART_BUFFER_SIZE - offset,
 239:Core/Src/main.c ****     //                     "---\r\n");
 240:Core/Src/main.c ****     
 241:Core/Src/main.c ****     // // Transmit the message
 242:Core/Src/main.c ****     // HAL_UART_Transmit(&huart1, (uint8_t *)uart_buffer, strlen(uart_buffer), HAL_MAX_DELAY);
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****     // HAL_Delay(500);
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   // bool is_sleep = is_accelerometer_in_sleep_mode();
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   // if (is_sleep && first_time_sleep) {
 249:Core/Src/main.c ****   //     led_execute_sequence(LED_SEQ_THREE_BLINKS);
 250:Core/Src/main.c ****   //     first_time_sleep = false;
 251:Core/Src/main.c ****   // }
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   // bool is_motion = is_motion_detected();
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   // if (is_motion) {
 256:Core/Src/main.c ****   //     led_on(100);
 257:Core/Src/main.c ****   // }
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****     /* USER CODE END WHILE */
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 6


 262:Core/Src/main.c ****   }
 263:Core/Src/main.c ****   /* USER CODE END 3 */
 264:Core/Src/main.c **** }
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** /**
 267:Core/Src/main.c ****   * @brief System Clock Configuration
 268:Core/Src/main.c ****   * @retval None
 269:Core/Src/main.c ****   */
 270:Core/Src/main.c **** void SystemClock_Config(void)
 271:Core/Src/main.c **** {
 272:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 273:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 274:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 277:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 278:Core/Src/main.c ****   */
 279:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 280:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 281:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 282:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 283:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 284:Core/Src/main.c ****   {
 285:Core/Src/main.c ****     Error_Handler();
 286:Core/Src/main.c ****   }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 289:Core/Src/main.c ****   */
 290:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 291:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 292:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 293:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 294:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 297:Core/Src/main.c ****   {
 298:Core/Src/main.c ****     Error_Handler();
 299:Core/Src/main.c ****   }
 300:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1;
 301:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 302:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 303:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 304:Core/Src/main.c ****   {
 305:Core/Src/main.c ****     Error_Handler();
 306:Core/Src/main.c ****   }
 307:Core/Src/main.c **** }
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** /**
 310:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 311:Core/Src/main.c ****   * @param None
 312:Core/Src/main.c ****   * @retval None
 313:Core/Src/main.c ****   */
 314:Core/Src/main.c **** static void MX_I2C1_Init(void)
 315:Core/Src/main.c **** {
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 318:Core/Src/main.c **** 
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 7


 319:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 324:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 325:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00201D2B;
 326:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 327:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 328:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 329:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 330:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 331:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 332:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 333:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 334:Core/Src/main.c ****   {
 335:Core/Src/main.c ****     Error_Handler();
 336:Core/Src/main.c ****   }
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   /** Configure Analogue filter
 339:Core/Src/main.c ****   */
 340:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****     Error_Handler();
 343:Core/Src/main.c ****   }
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /** Configure Digital filter
 346:Core/Src/main.c ****   */
 347:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 348:Core/Src/main.c ****   {
 349:Core/Src/main.c ****     Error_Handler();
 350:Core/Src/main.c ****   }
 351:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 354:Core/Src/main.c **** 
 355:Core/Src/main.c **** }
 356:Core/Src/main.c **** 
 357:Core/Src/main.c **** /**
 358:Core/Src/main.c ****   * @brief TIM16 Initialization Function
 359:Core/Src/main.c ****   * @param None
 360:Core/Src/main.c ****   * @retval None
 361:Core/Src/main.c ****   */
 362:Core/Src/main.c **** static void MX_TIM16_Init(void)
 363:Core/Src/main.c **** {
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 0 */
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   /* USER CODE END TIM16_Init 0 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 370:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 371:Core/Src/main.c **** 
 372:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 1 */
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****   /* USER CODE END TIM16_Init 1 */
 375:Core/Src/main.c ****   htim16.Instance = TIM16;
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 8


 376:Core/Src/main.c ****   htim16.Init.Prescaler = 0;
 377:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 378:Core/Src/main.c ****   htim16.Init.Period = 65535;
 379:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 380:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 381:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 382:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 383:Core/Src/main.c ****   {
 384:Core/Src/main.c ****     Error_Handler();
 385:Core/Src/main.c ****   }
 386:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim16) != HAL_OK)
 387:Core/Src/main.c ****   {
 388:Core/Src/main.c ****     Error_Handler();
 389:Core/Src/main.c ****   }
 390:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 391:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 392:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 393:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 394:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 395:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 396:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 397:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 398:Core/Src/main.c ****   {
 399:Core/Src/main.c ****     Error_Handler();
 400:Core/Src/main.c ****   }
 401:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 402:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 403:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 404:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 405:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 406:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 407:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 408:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 409:Core/Src/main.c ****   {
 410:Core/Src/main.c ****     Error_Handler();
 411:Core/Src/main.c ****   }
 412:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 2 */
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   /* USER CODE END TIM16_Init 2 */
 415:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim16);
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** }
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** /**
 420:Core/Src/main.c ****   * @brief USART1 Initialization Function
 421:Core/Src/main.c ****   * @param None
 422:Core/Src/main.c ****   * @retval None
 423:Core/Src/main.c ****   */
 424:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 425:Core/Src/main.c **** {
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 428:Core/Src/main.c **** 
 429:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 432:Core/Src/main.c **** 
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 9


 433:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 434:Core/Src/main.c ****   huart1.Instance = USART1;
 435:Core/Src/main.c ****   huart1.Init.BaudRate = 38400;
 436:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 437:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 438:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 439:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 440:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 441:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 442:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 443:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 444:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 445:Core/Src/main.c ****   {
 446:Core/Src/main.c ****     Error_Handler();
 447:Core/Src/main.c ****   }
 448:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 449:Core/Src/main.c **** 
 450:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 451:Core/Src/main.c **** 
 452:Core/Src/main.c **** }
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** /**
 455:Core/Src/main.c ****   * @brief GPIO Initialization Function
 456:Core/Src/main.c ****   * @param None
 457:Core/Src/main.c ****   * @retval None
 458:Core/Src/main.c ****   */
 459:Core/Src/main.c **** static void MX_GPIO_Init(void)
 460:Core/Src/main.c **** {
  26              		.loc 1 460 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 461:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 461 3 view .LVU1
  42              		.loc 1 461 20 is_stmt 0 view .LVU2
  43 0004 03AC     		add	r4, sp, #12
  44 0006 1422     		movs	r2, #20
  45 0008 0021     		movs	r1, #0
  46 000a 2000     		movs	r0, r4
  47 000c FFF7FEFF 		bl	memset
  48              	.LVL0:
 462:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 463:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 466:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 10


  49              		.loc 1 466 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 466 3 view .LVU4
  52              		.loc 1 466 3 view .LVU5
  53 0010 2A4B     		ldr	r3, .L2
  54 0012 5A69     		ldr	r2, [r3, #20]
  55 0014 8021     		movs	r1, #128
  56 0016 C903     		lsls	r1, r1, #15
  57 0018 0A43     		orrs	r2, r1
  58 001a 5A61     		str	r2, [r3, #20]
  59              		.loc 1 466 3 view .LVU6
  60 001c 5A69     		ldr	r2, [r3, #20]
  61 001e 0A40     		ands	r2, r1
  62 0020 0092     		str	r2, [sp]
  63              		.loc 1 466 3 view .LVU7
  64 0022 009A     		ldr	r2, [sp]
  65              	.LBE4:
  66              		.loc 1 466 3 view .LVU8
 467:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  67              		.loc 1 467 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 467 3 view .LVU10
  70              		.loc 1 467 3 view .LVU11
  71 0024 5A69     		ldr	r2, [r3, #20]
  72 0026 8021     		movs	r1, #128
  73 0028 8902     		lsls	r1, r1, #10
  74 002a 0A43     		orrs	r2, r1
  75 002c 5A61     		str	r2, [r3, #20]
  76              		.loc 1 467 3 view .LVU12
  77 002e 5A69     		ldr	r2, [r3, #20]
  78 0030 0A40     		ands	r2, r1
  79 0032 0192     		str	r2, [sp, #4]
  80              		.loc 1 467 3 view .LVU13
  81 0034 019A     		ldr	r2, [sp, #4]
  82              	.LBE5:
  83              		.loc 1 467 3 view .LVU14
 468:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  84              		.loc 1 468 3 view .LVU15
  85              	.LBB6:
  86              		.loc 1 468 3 view .LVU16
  87              		.loc 1 468 3 view .LVU17
  88 0036 5A69     		ldr	r2, [r3, #20]
  89 0038 8021     		movs	r1, #128
  90 003a C902     		lsls	r1, r1, #11
  91 003c 0A43     		orrs	r2, r1
  92 003e 5A61     		str	r2, [r3, #20]
  93              		.loc 1 468 3 view .LVU18
  94 0040 5B69     		ldr	r3, [r3, #20]
  95 0042 0B40     		ands	r3, r1
  96 0044 0293     		str	r3, [sp, #8]
  97              		.loc 1 468 3 view .LVU19
  98 0046 029B     		ldr	r3, [sp, #8]
  99              	.LBE6:
 100              		.loc 1 468 3 view .LVU20
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 471:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, GPIO_PIN_RESET);
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 11


 101              		.loc 1 471 3 view .LVU21
 102 0048 8027     		movs	r7, #128
 103 004a BF01     		lsls	r7, r7, #6
 104 004c 1C4D     		ldr	r5, .L2+4
 105 004e 0022     		movs	r2, #0
 106 0050 3900     		movs	r1, r7
 107 0052 2800     		movs	r0, r5
 108 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 109              	.LVL1:
 472:Core/Src/main.c **** 
 473:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 */
 474:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 110              		.loc 1 474 3 view .LVU22
 111              		.loc 1 474 23 is_stmt 0 view .LVU23
 112 0058 0323     		movs	r3, #3
 113 005a 0393     		str	r3, [sp, #12]
 475:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 114              		.loc 1 475 3 is_stmt 1 view .LVU24
 115              		.loc 1 475 24 is_stmt 0 view .LVU25
 116 005c 8823     		movs	r3, #136
 117 005e 5B03     		lsls	r3, r3, #13
 118 0060 0493     		str	r3, [sp, #16]
 476:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 119              		.loc 1 476 3 is_stmt 1 view .LVU26
 120              		.loc 1 476 24 is_stmt 0 view .LVU27
 121 0062 0026     		movs	r6, #0
 122 0064 0596     		str	r6, [sp, #20]
 477:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 123              		.loc 1 477 3 is_stmt 1 view .LVU28
 124 0066 9020     		movs	r0, #144
 125 0068 2100     		movs	r1, r4
 126 006a C005     		lsls	r0, r0, #23
 127 006c FFF7FEFF 		bl	HAL_GPIO_Init
 128              	.LVL2:
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /*Configure GPIO pin : PB13 */
 480:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 129              		.loc 1 480 3 view .LVU29
 130              		.loc 1 480 23 is_stmt 0 view .LVU30
 131 0070 0397     		str	r7, [sp, #12]
 481:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 481 3 is_stmt 1 view .LVU31
 133              		.loc 1 481 24 is_stmt 0 view .LVU32
 134 0072 0127     		movs	r7, #1
 135 0074 0497     		str	r7, [sp, #16]
 482:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 482 3 is_stmt 1 view .LVU33
 137              		.loc 1 482 24 is_stmt 0 view .LVU34
 138 0076 0596     		str	r6, [sp, #20]
 483:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 483 3 is_stmt 1 view .LVU35
 140              		.loc 1 483 25 is_stmt 0 view .LVU36
 141 0078 0696     		str	r6, [sp, #24]
 484:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 142              		.loc 1 484 3 is_stmt 1 view .LVU37
 143 007a 2100     		movs	r1, r4
 144 007c 2800     		movs	r0, r5
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 12


 145 007e FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL3:
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   /*Configure GPIO pin : PB5 */
 487:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
 147              		.loc 1 487 3 view .LVU38
 148              		.loc 1 487 23 is_stmt 0 view .LVU39
 149 0082 2023     		movs	r3, #32
 150 0084 0393     		str	r3, [sp, #12]
 488:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 151              		.loc 1 488 3 is_stmt 1 view .LVU40
 152              		.loc 1 488 24 is_stmt 0 view .LVU41
 153 0086 C423     		movs	r3, #196
 154 0088 9B03     		lsls	r3, r3, #14
 155 008a 0493     		str	r3, [sp, #16]
 489:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 156              		.loc 1 489 3 is_stmt 1 view .LVU42
 157              		.loc 1 489 24 is_stmt 0 view .LVU43
 158 008c 0597     		str	r7, [sp, #20]
 490:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 159              		.loc 1 490 3 is_stmt 1 view .LVU44
 160 008e 2100     		movs	r1, r4
 161 0090 2800     		movs	r0, r5
 162 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 163              	.LVL4:
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****   /* EXTI interrupt init*/
 493:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_1_IRQn, 0, 0);
 164              		.loc 1 493 3 view .LVU45
 165 0096 0022     		movs	r2, #0
 166 0098 0021     		movs	r1, #0
 167 009a 0520     		movs	r0, #5
 168 009c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 169              	.LVL5:
 494:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_1_IRQn);
 170              		.loc 1 494 3 view .LVU46
 171 00a0 0520     		movs	r0, #5
 172 00a2 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 173              	.LVL6:
 495:Core/Src/main.c **** 
 496:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 174              		.loc 1 496 3 view .LVU47
 175 00a6 0022     		movs	r2, #0
 176 00a8 0021     		movs	r1, #0
 177 00aa 0720     		movs	r0, #7
 178 00ac FFF7FEFF 		bl	HAL_NVIC_SetPriority
 179              	.LVL7:
 497:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 180              		.loc 1 497 3 view .LVU48
 181 00b0 0720     		movs	r0, #7
 182 00b2 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 183              	.LVL8:
 498:Core/Src/main.c **** 
 499:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 500:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 501:Core/Src/main.c **** }
 184              		.loc 1 501 1 is_stmt 0 view .LVU49
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 13


 185 00b6 09B0     		add	sp, sp, #36
 186              		@ sp needed
 187 00b8 F0BD     		pop	{r4, r5, r6, r7, pc}
 188              	.L3:
 189 00ba C046     		.align	2
 190              	.L2:
 191 00bc 00100240 		.word	1073876992
 192 00c0 00040048 		.word	1207960576
 193              		.cfi_endproc
 194              	.LFE48:
 196              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 197              		.align	1
 198              		.global	HAL_GPIO_EXTI_Callback
 199              		.syntax unified
 200              		.code	16
 201              		.thumb_func
 203              	HAL_GPIO_EXTI_Callback:
 204              	.LVL9:
 205              	.LFB49:
 502:Core/Src/main.c **** 
 503:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 504:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 505:Core/Src/main.c **** {
 206              		.loc 1 505 1 is_stmt 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		.loc 1 505 1 is_stmt 0 view .LVU51
 211 0000 10B5     		push	{r4, lr}
 212              	.LCFI2:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 4, -8
 215              		.cfi_offset 14, -4
 506:Core/Src/main.c ****     // 1) Check if it's the Button line (PB5)
 507:Core/Src/main.c ****     if (GPIO_Pin == GPIO_PIN_5)
 216              		.loc 1 507 5 is_stmt 1 view .LVU52
 217              		.loc 1 507 8 is_stmt 0 view .LVU53
 218 0002 2028     		cmp	r0, #32
 219 0004 00D0     		beq	.L6
 220              	.LVL10:
 221              	.L4:
 508:Core/Src/main.c ****     {
 509:Core/Src/main.c ****         // Call the button driver's function
 510:Core/Src/main.c ****         button_handle_exti(GPIO_Pin);
 511:Core/Src/main.c ****     }
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****     // 2) Check if it's the Accelerometer lines
 514:Core/Src/main.c ****     // else if (GPIO_Pin == GPIO_PIN_0)
 515:Core/Src/main.c ****     // {
 516:Core/Src/main.c ****     //     // PA0 => accelerometer INT2
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****     //     accelerometer_handle_int2();
 519:Core/Src/main.c ****     // }
 520:Core/Src/main.c ****     // else if (GPIO_Pin == GPIO_PIN_1)
 521:Core/Src/main.c ****     // {
 522:Core/Src/main.c ****     //     // PA1 => accelerometer INT1
 523:Core/Src/main.c ****     //     accelerometer_handle_int1();
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 14


 524:Core/Src/main.c ****     // }
 525:Core/Src/main.c **** 
 526:Core/Src/main.c ****     // You can handle more EXTI pins if needed
 527:Core/Src/main.c **** }
 222              		.loc 1 527 1 view .LVU54
 223              		@ sp needed
 224 0006 10BD     		pop	{r4, pc}
 225              	.LVL11:
 226              	.L6:
 510:Core/Src/main.c ****     }
 227              		.loc 1 510 9 is_stmt 1 view .LVU55
 228 0008 FFF7FEFF 		bl	button_handle_exti
 229              	.LVL12:
 230              		.loc 1 527 1 is_stmt 0 view .LVU56
 231 000c FBE7     		b	.L4
 232              		.cfi_endproc
 233              	.LFE49:
 235              		.section	.text.Error_Handler,"ax",%progbits
 236              		.align	1
 237              		.global	Error_Handler
 238              		.syntax unified
 239              		.code	16
 240              		.thumb_func
 242              	Error_Handler:
 243              	.LFB50:
 528:Core/Src/main.c **** 
 529:Core/Src/main.c **** /* USER CODE END 4 */
 530:Core/Src/main.c **** 
 531:Core/Src/main.c **** /**
 532:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 533:Core/Src/main.c ****   * @retval None
 534:Core/Src/main.c ****   */
 535:Core/Src/main.c **** void Error_Handler(void)
 536:Core/Src/main.c **** {
 244              		.loc 1 536 1 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ Volatile: function does not return.
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 537:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 538:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 539:Core/Src/main.c ****   __disable_irq();
 250              		.loc 1 539 3 view .LVU58
 251              	.LBB7:
 252              	.LBI7:
 253              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 15


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 16


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 17


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 254              		.loc 2 140 27 view .LVU59
 255              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 256              		.loc 2 142 3 view .LVU60
 257              		.syntax divided
 258              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 259 0000 72B6     		cpsid i
 260              	@ 0 "" 2
 261              		.thumb
 262              		.syntax unified
 263              	.L8:
 264              	.LBE8:
 265              	.LBE7:
 540:Core/Src/main.c ****   while (1)
 266              		.loc 1 540 3 view .LVU61
 541:Core/Src/main.c ****   {
 542:Core/Src/main.c ****   }
 267              		.loc 1 542 3 view .LVU62
 540:Core/Src/main.c ****   while (1)
 268              		.loc 1 540 9 view .LVU63
 269 0002 FEE7     		b	.L8
 270              		.cfi_endproc
 271              	.LFE50:
 273              		.section	.text.MX_I2C1_Init,"ax",%progbits
 274              		.align	1
 275              		.syntax unified
 276              		.code	16
 277              		.thumb_func
 279              	MX_I2C1_Init:
 280              	.LFB45:
 315:Core/Src/main.c **** 
 281              		.loc 1 315 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 0000 10B5     		push	{r4, lr}
 286              	.LCFI3:
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 4, -8
 289              		.cfi_offset 14, -4
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 18


 324:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00201D2B;
 290              		.loc 1 324 3 view .LVU65
 324:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00201D2B;
 291              		.loc 1 324 18 is_stmt 0 view .LVU66
 292 0002 1248     		ldr	r0, .L16
 293 0004 124B     		ldr	r3, .L16+4
 294 0006 0360     		str	r3, [r0]
 325:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 295              		.loc 1 325 3 is_stmt 1 view .LVU67
 325:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 296              		.loc 1 325 21 is_stmt 0 view .LVU68
 297 0008 124B     		ldr	r3, .L16+8
 298 000a 4360     		str	r3, [r0, #4]
 326:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 299              		.loc 1 326 3 is_stmt 1 view .LVU69
 326:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 300              		.loc 1 326 26 is_stmt 0 view .LVU70
 301 000c 0023     		movs	r3, #0
 302 000e 8360     		str	r3, [r0, #8]
 327:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 303              		.loc 1 327 3 is_stmt 1 view .LVU71
 327:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 304              		.loc 1 327 29 is_stmt 0 view .LVU72
 305 0010 0122     		movs	r2, #1
 306 0012 C260     		str	r2, [r0, #12]
 328:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 307              		.loc 1 328 3 is_stmt 1 view .LVU73
 328:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 308              		.loc 1 328 30 is_stmt 0 view .LVU74
 309 0014 0361     		str	r3, [r0, #16]
 329:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 310              		.loc 1 329 3 is_stmt 1 view .LVU75
 329:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 311              		.loc 1 329 26 is_stmt 0 view .LVU76
 312 0016 4361     		str	r3, [r0, #20]
 330:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 313              		.loc 1 330 3 is_stmt 1 view .LVU77
 330:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 314              		.loc 1 330 31 is_stmt 0 view .LVU78
 315 0018 8361     		str	r3, [r0, #24]
 331:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 316              		.loc 1 331 3 is_stmt 1 view .LVU79
 331:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 317              		.loc 1 331 30 is_stmt 0 view .LVU80
 318 001a C361     		str	r3, [r0, #28]
 332:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 319              		.loc 1 332 3 is_stmt 1 view .LVU81
 332:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 320              		.loc 1 332 28 is_stmt 0 view .LVU82
 321 001c 0362     		str	r3, [r0, #32]
 333:Core/Src/main.c ****   {
 322              		.loc 1 333 3 is_stmt 1 view .LVU83
 333:Core/Src/main.c ****   {
 323              		.loc 1 333 7 is_stmt 0 view .LVU84
 324 001e FFF7FEFF 		bl	HAL_I2C_Init
 325              	.LVL13:
 333:Core/Src/main.c ****   {
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 19


 326              		.loc 1 333 6 discriminator 1 view .LVU85
 327 0022 0028     		cmp	r0, #0
 328 0024 0CD1     		bne	.L13
 340:Core/Src/main.c ****   {
 329              		.loc 1 340 3 is_stmt 1 view .LVU86
 340:Core/Src/main.c ****   {
 330              		.loc 1 340 7 is_stmt 0 view .LVU87
 331 0026 0948     		ldr	r0, .L16
 332 0028 0021     		movs	r1, #0
 333 002a FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 334              	.LVL14:
 340:Core/Src/main.c ****   {
 335              		.loc 1 340 6 discriminator 1 view .LVU88
 336 002e 0028     		cmp	r0, #0
 337 0030 08D1     		bne	.L14
 347:Core/Src/main.c ****   {
 338              		.loc 1 347 3 is_stmt 1 view .LVU89
 347:Core/Src/main.c ****   {
 339              		.loc 1 347 7 is_stmt 0 view .LVU90
 340 0032 0648     		ldr	r0, .L16
 341 0034 0021     		movs	r1, #0
 342 0036 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 343              	.LVL15:
 347:Core/Src/main.c ****   {
 344              		.loc 1 347 6 discriminator 1 view .LVU91
 345 003a 0028     		cmp	r0, #0
 346 003c 04D1     		bne	.L15
 355:Core/Src/main.c **** 
 347              		.loc 1 355 1 view .LVU92
 348              		@ sp needed
 349 003e 10BD     		pop	{r4, pc}
 350              	.L13:
 335:Core/Src/main.c ****   }
 351              		.loc 1 335 5 is_stmt 1 view .LVU93
 352 0040 FFF7FEFF 		bl	Error_Handler
 353              	.LVL16:
 354              	.L14:
 342:Core/Src/main.c ****   }
 355              		.loc 1 342 5 view .LVU94
 356 0044 FFF7FEFF 		bl	Error_Handler
 357              	.LVL17:
 358              	.L15:
 349:Core/Src/main.c ****   }
 359              		.loc 1 349 5 view .LVU95
 360 0048 FFF7FEFF 		bl	Error_Handler
 361              	.LVL18:
 362              	.L17:
 363              		.align	2
 364              	.L16:
 365 004c 00000000 		.word	hi2c1
 366 0050 00540040 		.word	1073763328
 367 0054 2B1D2000 		.word	2104619
 368              		.cfi_endproc
 369              	.LFE45:
 371              		.section	.text.MX_TIM16_Init,"ax",%progbits
 372              		.align	1
 373              		.syntax unified
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 20


 374              		.code	16
 375              		.thumb_func
 377              	MX_TIM16_Init:
 378              	.LFB46:
 363:Core/Src/main.c **** 
 379              		.loc 1 363 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 64
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 00B5     		push	{lr}
 384              	.LCFI4:
 385              		.cfi_def_cfa_offset 4
 386              		.cfi_offset 14, -4
 387 0002 91B0     		sub	sp, sp, #68
 388              	.LCFI5:
 389              		.cfi_def_cfa_offset 72
 369:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 390              		.loc 1 369 3 view .LVU97
 369:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 391              		.loc 1 369 22 is_stmt 0 view .LVU98
 392 0004 1C22     		movs	r2, #28
 393 0006 0021     		movs	r1, #0
 394 0008 09A8     		add	r0, sp, #36
 395 000a FFF7FEFF 		bl	memset
 396              	.LVL19:
 370:Core/Src/main.c **** 
 397              		.loc 1 370 3 is_stmt 1 view .LVU99
 370:Core/Src/main.c **** 
 398              		.loc 1 370 34 is_stmt 0 view .LVU100
 399 000e 2022     		movs	r2, #32
 400 0010 0021     		movs	r1, #0
 401 0012 01A8     		add	r0, sp, #4
 402 0014 FFF7FEFF 		bl	memset
 403              	.LVL20:
 375:Core/Src/main.c ****   htim16.Init.Prescaler = 0;
 404              		.loc 1 375 3 is_stmt 1 view .LVU101
 375:Core/Src/main.c ****   htim16.Init.Prescaler = 0;
 405              		.loc 1 375 19 is_stmt 0 view .LVU102
 406 0018 2048     		ldr	r0, .L27
 407 001a 214B     		ldr	r3, .L27+4
 408 001c 0360     		str	r3, [r0]
 376:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 409              		.loc 1 376 3 is_stmt 1 view .LVU103
 376:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 410              		.loc 1 376 25 is_stmt 0 view .LVU104
 411 001e 0023     		movs	r3, #0
 412 0020 4360     		str	r3, [r0, #4]
 377:Core/Src/main.c ****   htim16.Init.Period = 65535;
 413              		.loc 1 377 3 is_stmt 1 view .LVU105
 377:Core/Src/main.c ****   htim16.Init.Period = 65535;
 414              		.loc 1 377 27 is_stmt 0 view .LVU106
 415 0022 8360     		str	r3, [r0, #8]
 378:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 416              		.loc 1 378 3 is_stmt 1 view .LVU107
 378:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 417              		.loc 1 378 22 is_stmt 0 view .LVU108
 418 0024 1F4A     		ldr	r2, .L27+8
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 21


 419 0026 C260     		str	r2, [r0, #12]
 379:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 420              		.loc 1 379 3 is_stmt 1 view .LVU109
 379:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 421              		.loc 1 379 29 is_stmt 0 view .LVU110
 422 0028 0361     		str	r3, [r0, #16]
 380:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 423              		.loc 1 380 3 is_stmt 1 view .LVU111
 380:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 424              		.loc 1 380 33 is_stmt 0 view .LVU112
 425 002a 4361     		str	r3, [r0, #20]
 381:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 426              		.loc 1 381 3 is_stmt 1 view .LVU113
 381:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 427              		.loc 1 381 33 is_stmt 0 view .LVU114
 428 002c 8361     		str	r3, [r0, #24]
 382:Core/Src/main.c ****   {
 429              		.loc 1 382 3 is_stmt 1 view .LVU115
 382:Core/Src/main.c ****   {
 430              		.loc 1 382 7 is_stmt 0 view .LVU116
 431 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 432              	.LVL21:
 382:Core/Src/main.c ****   {
 433              		.loc 1 382 6 discriminator 1 view .LVU117
 434 0032 0028     		cmp	r0, #0
 435 0034 29D1     		bne	.L23
 386:Core/Src/main.c ****   {
 436              		.loc 1 386 3 is_stmt 1 view .LVU118
 386:Core/Src/main.c ****   {
 437              		.loc 1 386 7 is_stmt 0 view .LVU119
 438 0036 1948     		ldr	r0, .L27
 439 0038 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 440              	.LVL22:
 386:Core/Src/main.c ****   {
 441              		.loc 1 386 6 discriminator 1 view .LVU120
 442 003c 0028     		cmp	r0, #0
 443 003e 26D1     		bne	.L24
 390:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 444              		.loc 1 390 3 is_stmt 1 view .LVU121
 390:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 445              		.loc 1 390 20 is_stmt 0 view .LVU122
 446 0040 09A9     		add	r1, sp, #36
 447 0042 6023     		movs	r3, #96
 448 0044 0993     		str	r3, [sp, #36]
 391:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 449              		.loc 1 391 3 is_stmt 1 view .LVU123
 391:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 450              		.loc 1 391 19 is_stmt 0 view .LVU124
 451 0046 0023     		movs	r3, #0
 452 0048 4B60     		str	r3, [r1, #4]
 392:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 453              		.loc 1 392 3 is_stmt 1 view .LVU125
 392:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 454              		.loc 1 392 24 is_stmt 0 view .LVU126
 455 004a 8B60     		str	r3, [r1, #8]
 393:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 456              		.loc 1 393 3 is_stmt 1 view .LVU127
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 22


 393:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 457              		.loc 1 393 25 is_stmt 0 view .LVU128
 458 004c CB60     		str	r3, [r1, #12]
 394:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 459              		.loc 1 394 3 is_stmt 1 view .LVU129
 394:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 460              		.loc 1 394 24 is_stmt 0 view .LVU130
 461 004e 0B61     		str	r3, [r1, #16]
 395:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 462              		.loc 1 395 3 is_stmt 1 view .LVU131
 395:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 463              		.loc 1 395 25 is_stmt 0 view .LVU132
 464 0050 4B61     		str	r3, [r1, #20]
 396:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 465              		.loc 1 396 3 is_stmt 1 view .LVU133
 396:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 466              		.loc 1 396 26 is_stmt 0 view .LVU134
 467 0052 8B61     		str	r3, [r1, #24]
 397:Core/Src/main.c ****   {
 468              		.loc 1 397 3 is_stmt 1 view .LVU135
 397:Core/Src/main.c ****   {
 469              		.loc 1 397 7 is_stmt 0 view .LVU136
 470 0054 1148     		ldr	r0, .L27
 471 0056 0022     		movs	r2, #0
 472 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 473              	.LVL23:
 397:Core/Src/main.c ****   {
 474              		.loc 1 397 6 discriminator 1 view .LVU137
 475 005c 0028     		cmp	r0, #0
 476 005e 18D1     		bne	.L25
 401:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 477              		.loc 1 401 3 is_stmt 1 view .LVU138
 401:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 478              		.loc 1 401 40 is_stmt 0 view .LVU139
 479 0060 01A9     		add	r1, sp, #4
 480 0062 0023     		movs	r3, #0
 481 0064 0193     		str	r3, [sp, #4]
 402:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 482              		.loc 1 402 3 is_stmt 1 view .LVU140
 402:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 483              		.loc 1 402 41 is_stmt 0 view .LVU141
 484 0066 4B60     		str	r3, [r1, #4]
 403:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 485              		.loc 1 403 3 is_stmt 1 view .LVU142
 403:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 486              		.loc 1 403 34 is_stmt 0 view .LVU143
 487 0068 8B60     		str	r3, [r1, #8]
 404:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 488              		.loc 1 404 3 is_stmt 1 view .LVU144
 404:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 489              		.loc 1 404 33 is_stmt 0 view .LVU145
 490 006a CB60     		str	r3, [r1, #12]
 405:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 491              		.loc 1 405 3 is_stmt 1 view .LVU146
 405:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 492              		.loc 1 405 35 is_stmt 0 view .LVU147
 493 006c 0B61     		str	r3, [r1, #16]
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 23


 406:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 494              		.loc 1 406 3 is_stmt 1 view .LVU148
 406:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 495              		.loc 1 406 38 is_stmt 0 view .LVU149
 496 006e 8022     		movs	r2, #128
 497 0070 9201     		lsls	r2, r2, #6
 498 0072 4A61     		str	r2, [r1, #20]
 407:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 499              		.loc 1 407 3 is_stmt 1 view .LVU150
 407:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 500              		.loc 1 407 40 is_stmt 0 view .LVU151
 501 0074 CB61     		str	r3, [r1, #28]
 408:Core/Src/main.c ****   {
 502              		.loc 1 408 3 is_stmt 1 view .LVU152
 408:Core/Src/main.c ****   {
 503              		.loc 1 408 7 is_stmt 0 view .LVU153
 504 0076 0948     		ldr	r0, .L27
 505 0078 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 506              	.LVL24:
 408:Core/Src/main.c ****   {
 507              		.loc 1 408 6 discriminator 1 view .LVU154
 508 007c 0028     		cmp	r0, #0
 509 007e 0AD1     		bne	.L26
 415:Core/Src/main.c **** 
 510              		.loc 1 415 3 is_stmt 1 view .LVU155
 511 0080 0648     		ldr	r0, .L27
 512 0082 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 513              	.LVL25:
 417:Core/Src/main.c **** 
 514              		.loc 1 417 1 is_stmt 0 view .LVU156
 515 0086 11B0     		add	sp, sp, #68
 516              		@ sp needed
 517 0088 00BD     		pop	{pc}
 518              	.L23:
 384:Core/Src/main.c ****   }
 519              		.loc 1 384 5 is_stmt 1 view .LVU157
 520 008a FFF7FEFF 		bl	Error_Handler
 521              	.LVL26:
 522              	.L24:
 388:Core/Src/main.c ****   }
 523              		.loc 1 388 5 view .LVU158
 524 008e FFF7FEFF 		bl	Error_Handler
 525              	.LVL27:
 526              	.L25:
 399:Core/Src/main.c ****   }
 527              		.loc 1 399 5 view .LVU159
 528 0092 FFF7FEFF 		bl	Error_Handler
 529              	.LVL28:
 530              	.L26:
 410:Core/Src/main.c ****   }
 531              		.loc 1 410 5 view .LVU160
 532 0096 FFF7FEFF 		bl	Error_Handler
 533              	.LVL29:
 534              	.L28:
 535 009a C046     		.align	2
 536              	.L27:
 537 009c 00000000 		.word	htim16
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 24


 538 00a0 00440140 		.word	1073824768
 539 00a4 FFFF0000 		.word	65535
 540              		.cfi_endproc
 541              	.LFE46:
 543              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 544              		.align	1
 545              		.syntax unified
 546              		.code	16
 547              		.thumb_func
 549              	MX_USART1_UART_Init:
 550              	.LFB47:
 425:Core/Src/main.c **** 
 551              		.loc 1 425 1 view -0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555 0000 10B5     		push	{r4, lr}
 556              	.LCFI6:
 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 4, -8
 559              		.cfi_offset 14, -4
 434:Core/Src/main.c ****   huart1.Init.BaudRate = 38400;
 560              		.loc 1 434 3 view .LVU162
 434:Core/Src/main.c ****   huart1.Init.BaudRate = 38400;
 561              		.loc 1 434 19 is_stmt 0 view .LVU163
 562 0002 0B48     		ldr	r0, .L32
 563 0004 0B4B     		ldr	r3, .L32+4
 564 0006 0360     		str	r3, [r0]
 435:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 565              		.loc 1 435 3 is_stmt 1 view .LVU164
 435:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 566              		.loc 1 435 24 is_stmt 0 view .LVU165
 567 0008 9623     		movs	r3, #150
 568 000a 1B02     		lsls	r3, r3, #8
 569 000c 4360     		str	r3, [r0, #4]
 436:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 570              		.loc 1 436 3 is_stmt 1 view .LVU166
 436:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 571              		.loc 1 436 26 is_stmt 0 view .LVU167
 572 000e 0023     		movs	r3, #0
 573 0010 8360     		str	r3, [r0, #8]
 437:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 574              		.loc 1 437 3 is_stmt 1 view .LVU168
 437:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 575              		.loc 1 437 24 is_stmt 0 view .LVU169
 576 0012 C360     		str	r3, [r0, #12]
 438:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 577              		.loc 1 438 3 is_stmt 1 view .LVU170
 438:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 578              		.loc 1 438 22 is_stmt 0 view .LVU171
 579 0014 0361     		str	r3, [r0, #16]
 439:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 580              		.loc 1 439 3 is_stmt 1 view .LVU172
 439:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 581              		.loc 1 439 20 is_stmt 0 view .LVU173
 582 0016 0C22     		movs	r2, #12
 583 0018 4261     		str	r2, [r0, #20]
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 25


 440:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 584              		.loc 1 440 3 is_stmt 1 view .LVU174
 440:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 585              		.loc 1 440 25 is_stmt 0 view .LVU175
 586 001a 8361     		str	r3, [r0, #24]
 441:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 587              		.loc 1 441 3 is_stmt 1 view .LVU176
 441:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 588              		.loc 1 441 28 is_stmt 0 view .LVU177
 589 001c C361     		str	r3, [r0, #28]
 442:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 590              		.loc 1 442 3 is_stmt 1 view .LVU178
 442:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 591              		.loc 1 442 30 is_stmt 0 view .LVU179
 592 001e 0362     		str	r3, [r0, #32]
 443:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 593              		.loc 1 443 3 is_stmt 1 view .LVU180
 443:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 594              		.loc 1 443 38 is_stmt 0 view .LVU181
 595 0020 4362     		str	r3, [r0, #36]
 444:Core/Src/main.c ****   {
 596              		.loc 1 444 3 is_stmt 1 view .LVU182
 444:Core/Src/main.c ****   {
 597              		.loc 1 444 7 is_stmt 0 view .LVU183
 598 0022 FFF7FEFF 		bl	HAL_UART_Init
 599              	.LVL30:
 444:Core/Src/main.c ****   {
 600              		.loc 1 444 6 discriminator 1 view .LVU184
 601 0026 0028     		cmp	r0, #0
 602 0028 00D1     		bne	.L31
 452:Core/Src/main.c **** 
 603              		.loc 1 452 1 view .LVU185
 604              		@ sp needed
 605 002a 10BD     		pop	{r4, pc}
 606              	.L31:
 446:Core/Src/main.c ****   }
 607              		.loc 1 446 5 is_stmt 1 view .LVU186
 608 002c FFF7FEFF 		bl	Error_Handler
 609              	.LVL31:
 610              	.L33:
 611              		.align	2
 612              	.L32:
 613 0030 00000000 		.word	huart1
 614 0034 00380140 		.word	1073821696
 615              		.cfi_endproc
 616              	.LFE47:
 618              		.section	.text.SystemClock_Config,"ax",%progbits
 619              		.align	1
 620              		.global	SystemClock_Config
 621              		.syntax unified
 622              		.code	16
 623              		.thumb_func
 625              	SystemClock_Config:
 626              	.LFB44:
 271:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 627              		.loc 1 271 1 view -0
 628              		.cfi_startproc
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 26


 629              		@ args = 0, pretend = 0, frame = 80
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631 0000 10B5     		push	{r4, lr}
 632              	.LCFI7:
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 4, -8
 635              		.cfi_offset 14, -4
 636 0002 94B0     		sub	sp, sp, #80
 637              	.LCFI8:
 638              		.cfi_def_cfa_offset 88
 272:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 639              		.loc 1 272 3 view .LVU188
 272:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 640              		.loc 1 272 22 is_stmt 0 view .LVU189
 641 0004 08AC     		add	r4, sp, #32
 642 0006 3022     		movs	r2, #48
 643 0008 0021     		movs	r1, #0
 644 000a 2000     		movs	r0, r4
 645 000c FFF7FEFF 		bl	memset
 646              	.LVL32:
 273:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 647              		.loc 1 273 3 is_stmt 1 view .LVU190
 273:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 648              		.loc 1 273 22 is_stmt 0 view .LVU191
 649 0010 1022     		movs	r2, #16
 650 0012 0021     		movs	r1, #0
 651 0014 04A8     		add	r0, sp, #16
 652 0016 FFF7FEFF 		bl	memset
 653              	.LVL33:
 274:Core/Src/main.c **** 
 654              		.loc 1 274 3 is_stmt 1 view .LVU192
 274:Core/Src/main.c **** 
 655              		.loc 1 274 28 is_stmt 0 view .LVU193
 656 001a 1022     		movs	r2, #16
 657 001c 0021     		movs	r1, #0
 658 001e 6846     		mov	r0, sp
 659 0020 FFF7FEFF 		bl	memset
 660              	.LVL34:
 279:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 661              		.loc 1 279 3 is_stmt 1 view .LVU194
 279:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 662              		.loc 1 279 36 is_stmt 0 view .LVU195
 663 0024 0223     		movs	r3, #2
 664 0026 0893     		str	r3, [sp, #32]
 280:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 665              		.loc 1 280 3 is_stmt 1 view .LVU196
 280:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 666              		.loc 1 280 30 is_stmt 0 view .LVU197
 667 0028 013B     		subs	r3, r3, #1
 668 002a 0B93     		str	r3, [sp, #44]
 281:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 669              		.loc 1 281 3 is_stmt 1 view .LVU198
 281:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 670              		.loc 1 281 41 is_stmt 0 view .LVU199
 671 002c 0F33     		adds	r3, r3, #15
 672 002e 0C93     		str	r3, [sp, #48]
 282:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 27


 673              		.loc 1 282 3 is_stmt 1 view .LVU200
 283:Core/Src/main.c ****   {
 674              		.loc 1 283 3 view .LVU201
 283:Core/Src/main.c ****   {
 675              		.loc 1 283 7 is_stmt 0 view .LVU202
 676 0030 2000     		movs	r0, r4
 677 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 678              	.LVL35:
 283:Core/Src/main.c ****   {
 679              		.loc 1 283 6 discriminator 1 view .LVU203
 680 0036 0028     		cmp	r0, #0
 681 0038 17D1     		bne	.L38
 290:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 682              		.loc 1 290 3 is_stmt 1 view .LVU204
 290:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 683              		.loc 1 290 31 is_stmt 0 view .LVU205
 684 003a 04A8     		add	r0, sp, #16
 685 003c 0723     		movs	r3, #7
 686 003e 0493     		str	r3, [sp, #16]
 292:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 687              		.loc 1 292 3 is_stmt 1 view .LVU206
 292:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 688              		.loc 1 292 34 is_stmt 0 view .LVU207
 689 0040 0023     		movs	r3, #0
 690 0042 4360     		str	r3, [r0, #4]
 293:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 691              		.loc 1 293 3 is_stmt 1 view .LVU208
 293:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 692              		.loc 1 293 35 is_stmt 0 view .LVU209
 693 0044 8360     		str	r3, [r0, #8]
 294:Core/Src/main.c **** 
 694              		.loc 1 294 3 is_stmt 1 view .LVU210
 294:Core/Src/main.c **** 
 695              		.loc 1 294 36 is_stmt 0 view .LVU211
 696 0046 C360     		str	r3, [r0, #12]
 296:Core/Src/main.c ****   {
 697              		.loc 1 296 3 is_stmt 1 view .LVU212
 296:Core/Src/main.c ****   {
 698              		.loc 1 296 7 is_stmt 0 view .LVU213
 699 0048 0021     		movs	r1, #0
 700 004a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 701              	.LVL36:
 296:Core/Src/main.c ****   {
 702              		.loc 1 296 6 discriminator 1 view .LVU214
 703 004e 0028     		cmp	r0, #0
 704 0050 0DD1     		bne	.L39
 300:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 705              		.loc 1 300 3 is_stmt 1 view .LVU215
 300:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 706              		.loc 1 300 38 is_stmt 0 view .LVU216
 707 0052 6846     		mov	r0, sp
 708 0054 2123     		movs	r3, #33
 709 0056 0093     		str	r3, [sp]
 301:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 710              		.loc 1 301 3 is_stmt 1 view .LVU217
 301:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 711              		.loc 1 301 38 is_stmt 0 view .LVU218
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 28


 712 0058 0023     		movs	r3, #0
 713 005a 0293     		str	r3, [sp, #8]
 302:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 714              		.loc 1 302 3 is_stmt 1 view .LVU219
 302:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 715              		.loc 1 302 36 is_stmt 0 view .LVU220
 716 005c 0393     		str	r3, [sp, #12]
 303:Core/Src/main.c ****   {
 717              		.loc 1 303 3 is_stmt 1 view .LVU221
 303:Core/Src/main.c ****   {
 718              		.loc 1 303 7 is_stmt 0 view .LVU222
 719 005e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 720              	.LVL37:
 303:Core/Src/main.c ****   {
 721              		.loc 1 303 6 discriminator 1 view .LVU223
 722 0062 0028     		cmp	r0, #0
 723 0064 05D1     		bne	.L40
 307:Core/Src/main.c **** 
 724              		.loc 1 307 1 view .LVU224
 725 0066 14B0     		add	sp, sp, #80
 726              		@ sp needed
 727 0068 10BD     		pop	{r4, pc}
 728              	.L38:
 285:Core/Src/main.c ****   }
 729              		.loc 1 285 5 is_stmt 1 view .LVU225
 730 006a FFF7FEFF 		bl	Error_Handler
 731              	.LVL38:
 732              	.L39:
 298:Core/Src/main.c ****   }
 733              		.loc 1 298 5 view .LVU226
 734 006e FFF7FEFF 		bl	Error_Handler
 735              	.LVL39:
 736              	.L40:
 305:Core/Src/main.c ****   }
 737              		.loc 1 305 5 view .LVU227
 738 0072 FFF7FEFF 		bl	Error_Handler
 739              	.LVL40:
 740              		.cfi_endproc
 741              	.LFE44:
 743              		.section	.text.main,"ax",%progbits
 744              		.align	1
 745              		.global	main
 746              		.syntax unified
 747              		.code	16
 748              		.thumb_func
 750              	main:
 751              	.LFB43:
  76:Core/Src/main.c **** 
 752              		.loc 1 76 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756 0000 10B5     		push	{r4, lr}
 757              	.LCFI9:
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 4, -8
 760              		.cfi_offset 14, -4
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 29


  84:Core/Src/main.c **** 
 761              		.loc 1 84 3 view .LVU229
 762 0002 FFF7FEFF 		bl	HAL_Init
 763              	.LVL41:
  91:Core/Src/main.c **** 
 764              		.loc 1 91 3 view .LVU230
 765 0006 FFF7FEFF 		bl	SystemClock_Config
 766              	.LVL42:
  98:Core/Src/main.c ****   MX_I2C1_Init();
 767              		.loc 1 98 3 view .LVU231
 768 000a FFF7FEFF 		bl	MX_GPIO_Init
 769              	.LVL43:
  99:Core/Src/main.c ****   MX_TIM16_Init();
 770              		.loc 1 99 3 view .LVU232
 771 000e FFF7FEFF 		bl	MX_I2C1_Init
 772              	.LVL44:
 100:Core/Src/main.c ****   MX_USART1_UART_Init();
 773              		.loc 1 100 3 view .LVU233
 774 0012 FFF7FEFF 		bl	MX_TIM16_Init
 775              	.LVL45:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 776              		.loc 1 101 3 view .LVU234
 777 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 778              	.LVL46:
 103:Core/Src/main.c ****   haptic_feedback_controller_initialize();
 779              		.loc 1 103 3 view .LVU235
 780 001a 6420     		movs	r0, #100
 781 001c FFF7FEFF 		bl	HAL_Delay
 782              	.LVL47:
 104:Core/Src/main.c ****   accelerometer_controller_initialize();
 783              		.loc 1 104 3 view .LVU236
 784 0020 FFF7FEFF 		bl	haptic_feedback_controller_initialize
 785              	.LVL48:
 105:Core/Src/main.c ****   led_controller_initialize();
 786              		.loc 1 105 3 view .LVU237
 787 0024 FFF7FEFF 		bl	accelerometer_controller_initialize
 788              	.LVL49:
 106:Core/Src/main.c ****   button_controller_initialize();
 789              		.loc 1 106 3 view .LVU238
 790 0028 FFF7FEFF 		bl	led_controller_initialize
 791              	.LVL50:
 107:Core/Src/main.c ****   state_machine_initialize();
 792              		.loc 1 107 3 view .LVU239
 793 002c FFF7FEFF 		bl	button_controller_initialize
 794              	.LVL51:
 108:Core/Src/main.c ****   posture_controller_initialize();
 795              		.loc 1 108 3 view .LVU240
 796 0030 FFF7FEFF 		bl	state_machine_initialize
 797              	.LVL52:
 109:Core/Src/main.c ****   /* USER CODE END 2 */
 798              		.loc 1 109 3 view .LVU241
 799 0034 FFF7FEFF 		bl	posture_controller_initialize
 800              	.LVL53:
 114:Core/Src/main.c ****   bool first_time_sleep = true;
 801              		.loc 1 114 3 view .LVU242
 802 0038 0120     		movs	r0, #1
 803 003a FFF7FEFF 		bl	led_execute_sequence
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 30


 804              	.LVL54:
 115:Core/Src/main.c ****   accel_data_t accel_data;
 805              		.loc 1 115 3 view .LVU243
 116:Core/Src/main.c **** 
 806              		.loc 1 116 3 view .LVU244
 118:Core/Src/main.c ****   int offset = 0;
 807              		.loc 1 118 3 view .LVU245
 119:Core/Src/main.c ****   while (1)
 808              		.loc 1 119 3 view .LVU246
 809              	.L42:
 120:Core/Src/main.c ****   {
 810              		.loc 1 120 3 view .LVU247
 123:Core/Src/main.c **** 
 811              		.loc 1 123 5 discriminator 1 view .LVU248
 812 003e FFF7FEFF 		bl	posture_controller_update
 813              	.LVL55:
 120:Core/Src/main.c ****   {
 814              		.loc 1 120 9 view .LVU249
 815 0042 FCE7     		b	.L42
 816              		.cfi_endproc
 817              	.LFE43:
 819              		.global	huart1
 820              		.section	.bss.huart1,"aw",%nobits
 821              		.align	2
 824              	huart1:
 825 0000 00000000 		.space	136
 825      00000000 
 825      00000000 
 825      00000000 
 825      00000000 
 826              		.global	htim16
 827              		.section	.bss.htim16,"aw",%nobits
 828              		.align	2
 831              	htim16:
 832 0000 00000000 		.space	72
 832      00000000 
 832      00000000 
 832      00000000 
 832      00000000 
 833              		.global	hi2c1
 834              		.section	.bss.hi2c1,"aw",%nobits
 835              		.align	2
 838              	hi2c1:
 839 0000 00000000 		.space	84
 839      00000000 
 839      00000000 
 839      00000000 
 839      00000000 
 840              		.text
 841              	.Letext0:
 842              		.file 3 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x8.h"
 843              		.file 4 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 844              		.file 5 "/Applications/ArmGNUToolchain/14.2.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 845              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 846              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 847              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 848              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 31


 849              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 850              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h"
 851              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 852              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 853              		.file 14 "Core/Inc/led_controller.h"
 854              		.file 15 "Core/Inc/accelerometer_controller.h"
 855              		.file 16 "Core/Inc/button_controller.h"
 856              		.file 17 "Core/Inc/main.h"
 857              		.file 18 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 858              		.file 19 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c_ex.h"
 859              		.file 20 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 860              		.file 21 "Core/Inc/posture_controller.h"
 861              		.file 22 "Core/Inc/haptic_feedback_controller.h"
 862              		.file 23 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 863              		.file 24 "Core/Inc/state_machine.h"
 864              		.file 25 "<built-in>"
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:19     .text.MX_GPIO_Init:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:191    .text.MX_GPIO_Init:000000bc $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:197    .text.HAL_GPIO_EXTI_Callback:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:203    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:236    .text.Error_Handler:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:242    .text.Error_Handler:00000000 Error_Handler
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:274    .text.MX_I2C1_Init:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:279    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:365    .text.MX_I2C1_Init:0000004c $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:838    .bss.hi2c1:00000000 hi2c1
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:372    .text.MX_TIM16_Init:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:377    .text.MX_TIM16_Init:00000000 MX_TIM16_Init
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:537    .text.MX_TIM16_Init:0000009c $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:831    .bss.htim16:00000000 htim16
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:544    .text.MX_USART1_UART_Init:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:549    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:613    .text.MX_USART1_UART_Init:00000030 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:824    .bss.huart1:00000000 huart1
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:619    .text.SystemClock_Config:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:625    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:744    .text.main:00000000 $t
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:750    .text.main:00000000 main
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:821    .bss.huart1:00000000 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:828    .bss.htim16:00000000 $d
/var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s:835    .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
button_handle_exti
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_TIM_Base_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_Delay
haptic_feedback_controller_initialize
accelerometer_controller_initialize
led_controller_initialize
button_controller_initialize
state_machine_initialize
posture_controller_initialize
led_execute_sequence
ARM GAS  /var/folders/bp/ytvqs5756l50d7lg2fzmjpcr0000gn/T//ccxsnHr8.s 			page 33


posture_controller_update
